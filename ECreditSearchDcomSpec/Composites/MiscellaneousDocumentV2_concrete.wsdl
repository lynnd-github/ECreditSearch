<?xml version="1.0" encoding="UTF-8"?>
<!--Created by TIBCO WSDL-->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://soa.delta.com/miscellaneousdocument/v2" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://schemas.delta.com/common/dbcrequestinfo/v1" xmlns:ns1="http://schemas.delta.com/miscellaneousdoctypes/v2" xmlns:ns2="http://schemas.delta.com/ecredit/choicetext" xmlns:ns3="http://schemas.delta.com/common/creditcardinfo/v1" xmlns:ns4="http://schemas.delta.com/common/unaccompaniedminor/v1" xmlns:ns5="http://schemas.delta.com/common/error/v4" xmlns:ns6="http://schemas.delta.com/miscellaneousdoctypes/maintain/v1" xmlns:ns7="http://schemas.delta.com/ecredit/ecreditnumbersearch" xmlns:ns8="http://schemas.delta.com/ecredit/ecreditskymilessearch" xmlns:ns9="http://schemas.delta.com/common/baserequestinfo/v2" xmlns:ns10="http://schemas.delta.com/common/emdopt/v1" xmlns:ns11="http://schemas.delta.com/common/pnrrequestparams" xmlns:ns12="http://schemas.delta.com/common/creditvoucher/v1" xmlns:ns13="http://schemas.delta.com/common/creditvoucher/v2" xmlns:ns14="http://schemas.delta.com/ecredit/ecreditsearchrequest" xmlns:ns15="http://schemas.delta.com/common/printer/v4" xmlns:ns16="http://schemas.delta.com/common/pnrcommontypes/v1" xmlns:ns17="http://schemas.delta.com/common/hostcontext/v1" xmlns:ns18="http://schemas.delta.com/common/userauthdata/v2" xmlns:ns19="http://schemas.delta.com/ecredit/ecreditidnumbersearch" xmlns:ns20="http://schemas.delta.com/common/responseinfo/v1" xmlns:ns21="http://schemas.delta.com/common/advisorymessage/v2" xmlns:ns22="http://schemas.delta.com/common/emdmiscdoc/v1" xmlns:ns23="http://schemas.delta.com/common/auditflag/v1" xmlns:ns24="http://schemas.delta.com/common/fault/v3" xmlns:ns25="http://schemas.delta.com/common/fault/v4" xmlns:ns26="http://schemas.delta.com/common/ptrauthdata/v2" xmlns:ns27="http://schemas.delta.com/common/leoinfo/v1" xmlns:ns28="http://schemas.delta.com/printflightvoucher/v1" xmlns:ns29="http://schemas.delta.com/common/segmentinfo" xmlns:ns30="http://schemas.delta.com/common/debuginfo/v4" xmlns:ns31="http://schemas.delta.com/documentprinterinfo/v1" xmlns:ns32="http://schemas.delta.com/common/debuginfo/v3" xmlns:ns33="http://schemas.delta.com/misc/ecertificateresponse" xmlns:ns34="http://schemas.delta.com/common/baseresponseinfo/v2" xmlns:ns35="http://schemas.delta.com/common/pnr/v3" xmlns:ns36="http://schemas.delta.com/ecredit/eticket" xmlns:ns37="http://schemas.delta.com/common/requestinfo/v3" xmlns:ns38="http://schemas.delta.com/common/requestinfo/v4" xmlns:ns39="http://schemas.delta.com/common/checkhealth/v3" xmlns:ns40="http://schemas.delta.com/ecredit/ecreditsearchresponse" xmlns:ns41="http://schemas.delta.com/ecredit/legdetails" xmlns:ns42="http://schemas.delta.com/miscellaneousdocrequesttypes/v2" xmlns:ns43="http://schemas.delta.com/unaccompaniedmirortypes/v1" xmlns:ns44="http://schemas.delta.com/common/gatepassinfo/v1" xmlns:ns45="http://schemas.delta.com/common/secureflightpassengerdata/v2" xmlns:ns46="http://schemas.delta.com/common/passengerinfo" xmlns:ns47="http://schemas.delta.com/common/passengertypecode" xmlns:ns48="http://schemas.delta.com/common/virtualcreditcardvoucher/v1" xmlns:ns49="http://schemas.delta.com/common/requestoption/v1" xmlns:ns50="http://schemas.delta.com/electronicmiscdocument/v1" xmlns:ns51="http://schemas.delta.com/updatestatus/v1" xmlns:ns52="http://schemas.delta.com/common/pnroptions" xmlns:ns53="http://schemas.delta.com/ecredit/ecreditsearchcriteria" xmlns:ns54="http://schemas.delta.com/ecredit/ecredit" xmlns:ns55="http://schemas.delta.com/common/stamping/v2" xmlns:ns56="http://schemas.delta.com/common/pointofsaleinfo/v1" name="generatedWSDL" targetNamespace="http://soa.delta.com/miscellaneousdocument/v2">
    <wsdl:types>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/dbcrequestinfo/v1" targetNamespace="http://schemas.delta.com/common/dbcrequestinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="DBCRequestInfoType">
                <xsd:attribute name="Address1" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>ANS1..28 - freeform text</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Address2" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>ANS1..28 - freeform text</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="BoardPoint" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A3 - e.g. ATL</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Cabin" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 e.g. Y, F</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="City" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>ANS1..15 - </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="CompensationAmount" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>NS1..10 - e.g. 9999999.99
							* Mandatory if DeniedBoardingWithNoCompensation is not set.
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Country" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A3</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Currency" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A3 - e.g. USD
							* This field used for both Vol and Invol DBC
							* Mandatory when CompsensationAmount is set
							* Will always be USD at initial implementation
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="CustomerId" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N13 - 1234567890123</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Day" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N1..2 - valid values 1-31</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="DeltaDollarsOrCheck" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 -
							D = Delta Dollars
							C = Check
							null = N/A
							* Mandatory if CompensationAmount and Currency are set.
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="EarlyOffOrArrivalOneHour" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 - Y (yes) or null
							* Mandatory if IsDeniedBoardingWithNoComp is set.
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FlightNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N1..4 - 1332</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FrequentFlyerNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N10</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="InternationalOrDomestic" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 -
							I = International
							D = Domestic
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="IsDeniedBoardingWithNoComp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 - Y (yes) or null
							* Mandatory if CompensationAmount,Currency and DeltaDollarsOrCheck are set.
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Month" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A3 - e.g. JAN</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="NewArrivalTimeLaterThanLimit" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 -
							Y    = Yes
							N    = No
							null = defaults to No
							NOTE: Y if greater than 2 hours for Domestic - 4 hours for International
							      * Mandatory if VoluntaryOrInvoluntary attribute is set to I
							        and the ReasonForDeniedBoarding is set to OS or WB.
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="OffPoint" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A3 - e.g JFK</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PhoneNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N20 - 8168192442</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ReasonForDeniedBoarding" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A2 -
							DE = Downgrade Equip
							LC = Late Checkin
							OS = Oversold
							WB = Weight/Balance
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="RecordLocator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>AN6 - MDBX73</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="State" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A2</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TicketNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N13 - 9999999999999</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="VoluntaryOrInvoluntary" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A1 -
							V = Voluntary
							I = Involuntary
						</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Year" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>N2 - e.g. 14</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ZIPCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>AN1..9</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:element name="DBCRequestInfo" type="tns:DBCRequestInfoType"/>
        </xsd:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:card="http://schemas.delta.com/common/creditcardinfo/v1" xmlns:tns="http://schemas.delta.com/miscellaneousdoctypes/v2" xmlns:leo="http://schemas.delta.com/common/leoinfo/v1" xmlns:fault="http://schemas.delta.com/common/fault/v4" xmlns:ri4="http://schemas.delta.com/common/requestinfo/v4" xmlns:di4="http://schemas.delta.com/common/debuginfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns:err="http://schemas.delta.com/common/error/v4" xmlns:reqopt="http://schemas.delta.com/common/requestoption/v1" xmlns:emd="http://schemas.delta.com/electronicmiscdocument/v1" xmlns:pos="http://schemas.delta.com/common/pointofsaleinfo/v1" xmlns:gtp="http://schemas.delta.com/common/gatepassinfo/v1" xmlns:emo="http://schemas.delta.com/common/emdopt/v1" xmlns:adv="http://schemas.delta.com/common/advisorymessage/v2" xmlns:sf2="http://schemas.delta.com/common/secureflightpassengerdata/v2" xmlns:stp="http://schemas.delta.com/common/stamping/v2" xmlns:set="http://schemas.delta.com/common/pnrcommontypes/v1" xmlns:pi4="http://schemas.delta.com/common/printer/v4" xmlns:pfv="http://schemas.delta.com/printflightvoucher/v1" xmlns:dbc="http://schemas.delta.com/common/dbcrequestinfo/v1" xmlns:cidata="http://schemas.delta.com/documentprinterinfo/v1" xmlns:updt="http://schemas.delta.com/updatestatus/v1" targetNamespace="http://schemas.delta.com/miscellaneousdoctypes/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/fault/v3"/>
            <xsd:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/creditcardinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/requestoption/v1"/>
            <xsd:import namespace="http://schemas.delta.com/electronicmiscdocument/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/pointofsaleinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/gatepassinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/dbcrequestinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/leoinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/emdopt/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/secureflightpassengerdata/v2"/>
            <xsd:import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <xsd:import namespace="http://schemas.delta.com/common/stamping/v2"/>
            <xsd:import namespace="http://schemas.delta.com/common/printer/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/pnrcommontypes/v1"/>
            <xsd:import namespace="http://schemas.delta.com/printflightvoucher/v1"/>
            <xsd:import namespace="http://schemas.delta.com/documentprinterinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/updatestatus/v1"/>
            <xsd:complexType name="CiDataType">
                <xsd:attribute name="VoucherDetails" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="IssueAndPrintDeniedBoardingCompensationRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="dbc:DBCRequestInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueAndPrintDeniedBoardingCompensationResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="emo:EmdOptions" minOccurs="0"/>
                    <xsd:element ref="adv:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueAndPrintGatePassRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="gtp:GatePassInfo" minOccurs="0"/>
                    <xsd:element ref="sf2:SecureFlightPassengerData" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueAndPrintGatePassResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="adv:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueEmdRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="reqopt:RequestOption">
                        <xsd:annotation>
                            <xsd:documentation>REQOPT , Version 1.4</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="pos:PointOfSaleInfo"/>
                    <xsd:element ref="emd:EmdRequestInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueEmdResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="emd:EmdOutput" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueLawEnforcementGatePassRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="leo:LawEnforcementOfficerInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueLawEnforcementGatePassResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="adv:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="err:Error" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueSpecialServiceTicketRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element name="SpecialServiceTicketRequest" type="tns:SpecialServiceTicketRequestType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IssueSpecialServiceTicketResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="SpecialServiceTicketResponse" type="tns:SpecialServiceTicketResponseType" minOccurs="0"/>
                    <xsd:element ref="err:Error" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PrintInflightVoucherRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="set:SetupContextRequest" minOccurs="0"/>
                    <xsd:element ref="pi4:PrinterInfo" minOccurs="0"/>
                    <xsd:element ref="pfv:PassengerInfo" minOccurs="0"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="set:TeardownContextRequest" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PrintInflightVoucherResponseType">
                <xsd:sequence>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="adv:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="err:Error" minOccurs="0"/>
                    <xsd:element name="CiData" type="tns:CiDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="cidata:DocumentCommonInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="cidata:DocumentPrinterInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SpecialServiceTicketRequestType">
                <xsd:sequence>
                    <xsd:element ref="card:CreditCardInfo" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="AccountNumber" type="xsd:string"/>
                <xsd:attribute name="ApprovalCode" type="xsd:string"/>
                <xsd:attribute name="CarrierCode1" type="xsd:string"/>
                <xsd:attribute name="CarrierCode2" type="xsd:string"/>
                <xsd:attribute name="CarrierCode3" type="xsd:string"/>
                <xsd:attribute name="CarrierCode4" type="xsd:string"/>
                <xsd:attribute name="CurrencyCodeForTotalAmount" type="xsd:string"/>
                <xsd:attribute name="DestinationConnectionAirportCode1" type="xsd:string"/>
                <xsd:attribute name="DestinationConnectionAirportCode2" type="xsd:string"/>
                <xsd:attribute name="DestinationConnectionAirportCode3" type="xsd:string"/>
                <xsd:attribute name="DestinationConnectionAirportCode4" type="xsd:string"/>
                <xsd:attribute name="EquivalentPaidFareAmount" type="xsd:string"/>
                <xsd:attribute name="EquivalentPaidFareCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="ExchangeCouponDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					ExchangeCouponDate, format: DDMMMYY
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ExchangeCouponNumber" type="xsd:string"/>
                <xsd:attribute name="ExchangeDocumentNumber" type="xsd:string"/>
                <xsd:attribute name="ExchangeDocumentValue" type="xsd:string"/>
                <xsd:attribute name="FirstName" type="xsd:string"/>
                <xsd:attribute name="LastName" type="xsd:string"/>
                <xsd:attribute name="Location" type="xsd:string"/>
                <xsd:attribute name="NewFareBasis" type="xsd:string"/>
                <xsd:attribute name="OldFareBasis" type="xsd:string"/>
                <xsd:attribute name="OldOrNewMilesIndicator" type="xsd:string"/>
                <xsd:attribute name="OriginAirportCode" type="xsd:string"/>
                <xsd:attribute name="OriginalIssueDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					OriginalIssueDate, format: DDMMMYY
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="OwRtIndicator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					One-way Round-Trip Indicator
					O - One-way
					R - Round Trip
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SkymilesNumber" type="xsd:string"/>
                <xsd:attribute name="TaxAmount1" type="xsd:string"/>
                <xsd:attribute name="TaxAmount2" type="xsd:string"/>
                <xsd:attribute name="TaxAmount3" type="xsd:string"/>
                <xsd:attribute name="TaxCode1" type="xsd:string"/>
                <xsd:attribute name="TaxCode2" type="xsd:string"/>
                <xsd:attribute name="TaxCode3" type="xsd:string"/>
                <xsd:attribute name="TicketNumber" type="xsd:string"/>
                <xsd:attribute name="TotalAmount" type="xsd:string"/>
                <xsd:attribute name="TransactionAmount" type="xsd:string"/>
                <xsd:attribute name="TransactionCode" type="xsd:string"/>
                <xsd:attribute name="TransactionCurrencyCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="SpecialServiceTicketResponseType">
                <xsd:attribute name="DocumentNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="UpdateStatusRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo"/>
                    <xsd:element ref="stp:StampingInfo" minOccurs="0"/>
                    <xsd:element ref="updt:UpdateStatusRequestInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="UpdateStatusResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="emd:EmdOutput" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="IssueAndPrintDeniedBoardingCompensationRequest" type="tns:IssueAndPrintDeniedBoardingCompensationRequestType"/>
            <xsd:element name="IssueAndPrintDeniedBoardingCompensationResponse" type="tns:IssueAndPrintDeniedBoardingCompensationResponseType"/>
            <xsd:element name="IssueAndPrintGatePassRequest" type="tns:IssueAndPrintGatePassRequestType"/>
            <xsd:element name="IssueAndPrintGatePassResponse" type="tns:IssueAndPrintGatePassResponseType"/>
            <xsd:element name="IssueEmdRequest" type="tns:IssueEmdRequestType"/>
            <xsd:element name="IssueEmdResponse" type="tns:IssueEmdResponseType"/>
            <xsd:element name="IssueLawEnforcementGatePassRequest" type="tns:IssueLawEnforcementGatePassRequestType"/>
            <xsd:element name="IssueLawEnforcementGatePassResponse" type="tns:IssueLawEnforcementGatePassResponseType"/>
            <xsd:element name="PrintInflightVoucherRequest" type="tns:PrintInflightVoucherRequestType"/>
            <xsd:element name="PrintInflightVoucherResponse" type="tns:PrintInflightVoucherResponseType"/>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/choicetext" targetNamespace="http://schemas.delta.com/ecredit/choicetext" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="ChoiceTextType">
                <xs:attribute name="ChoiceData" type="xs:string"/>
                <xs:attribute name="ChoiceType" type="xs:string"/>
            </xs:complexType>
            <xs:element name="ChoiceText" type="tns:ChoiceTextType"/>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/creditcardinfo/v1" targetNamespace="http://schemas.delta.com/common/creditcardinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:element name="CreditCardInfo">
                <xsd:complexType>
                    <xsd:attribute name="CustomerIdentifier" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>N[3..4]</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="ExpirationDate" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>#[5] (mm-yy)</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="HolderName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>A[30], Name as it appears on the credit card</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="Number" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>X[1..21]</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="SignAndTravelFlag" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Y/N</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="Type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>A[2]</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="UniqueIdentifier" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>A[10]</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
        </xsd:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/unaccompaniedminor/v1" targetNamespace="http://schemas.delta.com/common/unaccompaniedminor/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="UnaccompaniedMinorReqType">
                <xsd:annotation>
                    <xsd:documentation>PUMINP V1.1</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="Age1" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..2], Mandatory, First unaccompanied minor age</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Age2" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..2], Second unaccompanied minor age</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Age3" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..2], Third unaccompanied minor age</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Age4" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..2], Fourth unaccompanied minor age</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ApprovalCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..6], Credit card approval code.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="BaseAmount" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..9], Base amount value  (assumed to be the same currency as the EMD currency)</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="CreditCardAccountNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..42], Mandatory - Credit card is the ONLY Form of payment accepted for this processing.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="CurrencyCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an3], Mandatory - Currency code.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ExchangeDocument" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1], Exchange document indicator.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FlightDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an5], Mandatory, Flight date in DDMMM format</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FlightNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..2], Mandatory, Flight number</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FromCity" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an3], Mandatory, Departure city</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="OWRTIndicator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[a1], Mandatory - One way/round trip indicator O for one way or = R for roundtrip</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBBBAddress" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..47], Mandatory - Address of the designated person who is bringing the unaccompanied minor(s) to the airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBBBCellPhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10], Cell phone number of the designated person who is bringing the unaccompanied minor(s) to the departure airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBBBHomePhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10..15], Home phone number of the designated person who is bringing the unaccompanied minor(s) to the departure airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBBBName" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[a4..45], Mandatory, To Be Brought By (TBBB) Name - Minimum two character surname followed by a slash then given name of the designated person who is bringing the unaccompanied minor(s) to the departure airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBBBWorkPhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10], Work phone number of the designated person who is bringing the unaccompanied minor(s) to the departure airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBMBAddress" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..47], Mandatory - Address of the designated person who is meeting the unaccompanied minor(s) at the destination airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBMBCellPhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10], Cell phone number of the designated person who is meeting the unaccompanied minor(s) at the destination airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBMBHomePhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10..15], Home phone number of the designated person who is meeting the unaccompanied minor(s) at the destination airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBMBName" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..47], Mandatory - Minimum two character surname followed by a slash then given name of the designated person who is meeting the unaccompanied minor(s) at the destination airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TBMBWorkPhone" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n10], Work phone number of the designated person who is meeting the unaccompanied minor(s) at the destination airport.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxAmount1" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..8], Tax amount 1 (assumed to be the same currency as the EMD currency) </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxAmount2" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..8], Tax amount 2 (assumed to be the same currency as the EMD currency) </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxAmount3" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..8], Tax amount 3 (assumed to be the same currency as the EMD currency) </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxCode1" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an2], Tax code 1</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxCode2" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an2], Tax code 2</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TaxCode3" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an2], Tax code 3</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ToCity" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an3], Mandatory, Destination city</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TotalAmount" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n1..9], Mandatory - Total amount (May be decimal or non-decimal).</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="WaiverCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[an1..5], Waiver code.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="UnaccompaniedMinorResType">
                <xsd:annotation>
                    <xsd:documentation>SSTOTP V1.0</xsd:documentation>
                </xsd:annotation>
                <xsd:attribute name="EFeeDocumentNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>[n13], Mandatory, Unaccompanied Minor Efee document number</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:element name="UnaccompaniedMinorReq" type="tns:UnaccompaniedMinorReqType"/>
            <xsd:element name="UnaccompaniedMinorRes" type="tns:UnaccompaniedMinorResType"/>
        </xsd:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/common/error/v4" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="ErrorType">
                <attribute name="AdditionalInfo" type="string">
                    <annotation>
                        <documentation>
    				information such as backend request, timings, etc -- anything
    				that would be helpful in determining the cause of the error
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorCode" type="string">
                    <annotation>
                        <documentation>
    				Each service will add additional error codes as
    				needed
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorText" type="string">
                    <annotation>
                        <documentation>
    				If the error was due to an exception within the
    				webservice code, then the contents of the exception
    				can be put here else a string explaining the error
    				can be put here, else it can be left blank.
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="ReasonCode" type="string">
                    <annotation>
                        <documentation>
    				backend error code if available or blank.
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="ReasonText" type="string">
                    <annotation>
                        <documentation>
    				backend error reason text or backend exception text
    				and/or stack trace , if available or blank
    			</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="Error" type="tns:ErrorType"/>
        </schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:am="http://schemas.delta.com/common/advisorymessage/v2" xmlns:emd="http://schemas.delta.com/common/emdmiscdoc/v1" xmlns:tns="http://schemas.delta.com/miscellaneousdoctypes/maintain/v1" xmlns:ri4="http://schemas.delta.com/common/requestinfo/v4" xmlns:di4="http://schemas.delta.com/common/debuginfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/miscellaneousdoctypes/maintain/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/emdmiscdoc/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <xsd:complexType name="MaintainDocsRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="emd:EmdMiscDoc" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="MaintainDocsResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="emd:EmdMiscDoc" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="am:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditnumbersearch" xmlns:ecrd="http://schemas.delta.com/ecredit/ecredit" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/ecredit/ecreditnumbersearch" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/ecredit/ecredit"/>
            <xs:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xs:complexType name="ECreditNumberSearchType">
                <xs:sequence>
                    <xs:element ref="ecrd:ECredit" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="FirstName" type="xs:string"/>
                <xs:attribute name="LastName" type="xs:string"/>
                <xs:attribute name="MaxNumberResults" type="xs:string"/>
                <xs:attribute name="RedemptionCode" type="xs:string"/>
                <xs:attribute name="Suffix" type="xs:string"/>
                <xs:attribute name="UIDocumentNumber" type="xs:string"/>
                <xs:attribute name="ValidateLevel" type="xs:string"/>
            </xs:complexType>
            <xs:element name="ECreditNumberSearch" type="tns:ECreditNumberSearchType"/>
        </xs:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditskymilessearch" xmlns:ecrd="http://schemas.delta.com/ecredit/ecredit" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/ecredit/ecreditskymilessearch" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/ecredit/ecredit"/>
            <import namespace="http://schemas.delta.com/common/error/v4"/>
            <complexType name="ECreditSkyMilesSearchType">
                <sequence>
                    <element ref="ecrd:ECredit" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="FirstName" type="string"/>
                <attribute name="LastName" type="string"/>
                <attribute name="MaxNumberResults" type="string"/>
                <attribute name="SmNumber" type="string"/>
                <attribute name="Suffix" type="string"/>
            </complexType>
            <element name="ECreditSkyMilesSearch" type="tns:ECreditSkyMilesSearchType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/baserequestinfo/v2" targetNamespace="http://schemas.delta.com/common/baserequestinfo/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="BaseRequestInfoType">
                <annotation>
                    <documentation>
        		The BaseRequestInfo can be used to identify each
        		operation invocation by capturing capture information
        		like the name of the client who is invoking an operation
        		and an optional transactionid . Operations that use the
        		TPF backend would use the RequestInfoType.
        	</documentation>
                </annotation>
                <attribute name="ApplicationName" use="required" type="string">
                    <annotation>
                        <documentation>
					The name with whihc the application identifies itself.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ApplicationVersion" type="string">
                    <annotation>
                        <documentation>
					Logged for debugging.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TransactionId" type="string">
                    <annotation>
                        <documentation>
					The unique transaction id for this request. This
					must be created and provided by the client and is
					used in instrumentation logging and reporting.
				</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="BaseRequestInfo" type="tns:BaseRequestInfoType"/>
        </schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/emdopt/v1" targetNamespace="http://schemas.delta.com/common/emdopt/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="EmdOptionsType">
                <xsd:attribute name="CertificateNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n13 Created Document Number</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ErrorNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FreeFormText" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="GivenNameNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="LocalIssueDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerGivenName" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerSurname" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="RedemptionCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SequenceNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SurnameNumber" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>n/a</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:element name="EmdOptions" type="tns:EmdOptionsType"/>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/pnrrequestparams" targetNamespace="http://schemas.delta.com/common/pnrrequestparams" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PnrRequestParamsType">
                <xs:attribute name="DtiOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FareOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FopOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="HistoryOnFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NameOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PhoneOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PtcOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RecordLocatorOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RemarksOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SegmentOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SsrOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="TicketOffFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>"Y" or "N"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="PnrRequestParams" type="y:PnrRequestParamsType"/>
        </xs:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/creditvoucher/v1" targetNamespace="http://schemas.delta.com/common/creditvoucher/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="TransportationCreditVoucherType">
                <annotation>
                    <documentation>
				Information about Transportation Credit Voucher. This complex type corresponds to TCVDTA 
			</documentation>
                </annotation>
                <attribute name="AddressLine1" type="string">
                    <annotation>
                        <documentation>
	                 		First line of address.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="AddressLine2" type="string">
                    <annotation>
                        <documentation>
	                 		Second line of address.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="BoardPoint" type="string">
                    <annotation>
                        <documentation>
	                 		Must be valid for flight if travel is
	                 		yesterday, today or tomorrow.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="City" type="string">
                    <annotation>
                        <documentation>
	                 		City for address. 1 to 22 charcters length.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="Country" type="string">
                    <annotation>
                        <documentation>
	                 		1 to 3 characters Country Code.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="DateOfTravel" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in DDMMMYY format.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="DocumentNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Document number if present (= ticket
	                 		number).
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultCarrier" type="string">
                    <annotation>
                        <documentation>
	                 		FaultCarrier will always be DL.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultFlightNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Flight for which passenger is being
	                 		compensated.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FrequentFlyerMiles" type="string">
                    <annotation>
                        <documentation>
	                 		Total number of skymiles given. Minimum of
	                 		100 miles. Mandatory Field if TCV Amount is NOT
	                 		used
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FrequentFlyerNumber" type="string">
                    <annotation>
                        <documentation>
	                 		FrequestFlyerNumber should be 10 digit numerics
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="PhoneNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Recipient's phone number. 8 to 20 numbers.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ReasonForCompensation" type="string">
                    <annotation>
                        <documentation>
	                 		For general RES agents the following is the
	                 		only valid reason code: FPOC = First Point
	                 		of Contact For RES Customer Cares agents the
	                 		following are valid reason codes: CUST =
	                 		Customer Cares BAG = Baggage HTL N/A = Hotel
	                 		Not Available FPOC ACS = First Point of
	                 		Contact ACS FPOC RES = First Point of
	                 		Contact RES FPOC IFS = First Point of
	                 		Contact In-Flight Services NOTE: the FPOC
	                 		xxx codes allow a Customer Cares agent to
	                 		identify the area where the first point of
	                 		contact occurred with the passenger. The
	                 		following is for information only and is not
	                 		currently in use by the SRS2 service call.
	                 		For ACS agents the following are valid
	                 		reason codes: HTL N/A = Hotel Not Available
	                 		FPOC = First Point of Contact BAG = Baggage
	                 		It is 3 to 8 characters
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="RecipientName" type="string">
                    <annotation>
                        <documentation>
		     		Name of the recipient in the form: LastName/FirstName
		     	</documentation>
                    </annotation>
                </attribute>
                <attribute name="SequenceNumber" type="string">
                    <annotation>
                        <documentation>
	                 		SequenceNumber - Default value is 1
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="State" type="string">
                    <annotation>
                        <documentation>
	                 		2 characters State Code.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="TCVAmount" type="string">
                    <annotation>
                        <documentation>
	                 		Delta Dollars compensation always issued in
	                 		USD. Format example 1.00 Mandatory field if
	                 		FF Miles is NOT used.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="UserId" type="string">
                    <annotation>
                        <documentation>
	                 		Agent User ID
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="WorkstationCityCode" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation city code. (i.e. ATL)
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="WorkstationWsine" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation Wsine / CRT Address. 6
	                 		characters length
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ZipCode" type="string">
                    <annotation>
                        <documentation>
	                 		1 to 9 digits of Zip code for address.
	                 	</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="TransportationCreditVoucher" type="tns:TransportationCreditVoucherType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/creditvoucher/v2" targetNamespace="http://schemas.delta.com/common/creditvoucher/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="TransportationCreditVoucherType">
                <annotation>
                    <documentation>
				Information about Transportation Credit Voucher. This complex type corresponds to TCVDTA 
			</documentation>
                </annotation>
                <attribute name="AddressLine1" type="string">
                    <annotation>
                        <documentation>
	                 		First line of address.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="AddressLine2" type="string">
                    <annotation>
                        <documentation>
	                 		Second line of address.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="BoardPoint" type="string">
                    <annotation>
                        <documentation>
	                 		Must be valid for flight if travel is
	                 		yesterday, today or tomorrow.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="City" type="string">
                    <annotation>
                        <documentation>
	                 		City for address. 1 to 22 charcters length.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="Country" type="string">
                    <annotation>
                        <documentation>
	                 		1 to 3 characters Country Code.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="CustomerID" type="string">
                    <annotation>
                        <documentation>
					Customer ID of passenger TCV was issued for; only returned if present in C716
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="DateOfTravel" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in DDMMMYY format.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="DocumentNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Document number if present (= ticket
	                 		number).
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultCarrier" type="string">
                    <annotation>
                        <documentation>
	                 		FaultCarrier will always be DL.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultFlightNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Flight for which passenger is being
	                 		compensated.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FrequentFlyerMiles" type="string">
                    <annotation>
                        <documentation>
	                 		Total number of skymiles given. Minimum of
	                 		100 miles. Mandatory Field if TCV Amount is NOT
	                 		used
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FrequentFlyerNumber" type="string">
                    <annotation>
                        <documentation>
	                 		FrequestFlyerNumber should be 10 digit numerics
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="PhoneNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Recipient's phone number. 8 to 20 numbers.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ReasonForCompensation" type="string">
                    <annotation>
                        <documentation>
	                 		For general RES agents the following is the
	                 		only valid reason code: FPOC = First Point
	                 		of Contact For RES Customer Cares agents the
	                 		following are valid reason codes: CUST =
	                 		Customer Cares BAG = Baggage HTL N/A = Hotel
	                 		Not Available FPOC ACS = First Point of
	                 		Contact ACS FPOC RES = First Point of
	                 		Contact RES FPOC IFS = First Point of
	                 		Contact In-Flight Services NOTE: the FPOC
	                 		xxx codes allow a Customer Cares agent to
	                 		identify the area where the first point of
	                 		contact occurred with the passenger. The
	                 		following is for information only and is not
	                 		currently in use by the SRS2 service call.
	                 		For ACS agents the following are valid
	                 		reason codes: HTL N/A = Hotel Not Available
	                 		FPOC = First Point of Contact BAG = Baggage
	                 		It is 3 to 8 characters
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="RecipientName" type="string">
                    <annotation>
                        <documentation>
		     		Name of the recipient in the form: LastName/FirstName
		     	</documentation>
                    </annotation>
                </attribute>
                <attribute name="RecordLocator" type="string">
                    <annotation>
                        <documentation>
					PNR Record locator associated with TCV; only returned present in C716
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="SequenceNumber" type="string">
                    <annotation>
                        <documentation>
	                 		SequenceNumber - Default value is 1
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="State" type="string">
                    <annotation>
                        <documentation>
	                 		2 characters State Code.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="TCVAmount" type="string">
                    <annotation>
                        <documentation>
	                 		Delta Dollars compensation always issued in
	                 		USD. Format example 1.00 Mandatory field if
	                 		FF Miles is NOT used.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="UserId" type="string">
                    <annotation>
                        <documentation>
	                 		Agent User ID
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="WorkstationCityCode" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation city code. (i.e. ATL)
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="WorkstationWsine" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation Wsine / CRT Address. 6
	                 		characters length
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ZipCode" type="string">
                    <annotation>
                        <documentation>
	                 		1 to 9 digits of Zip code for address.
	                 	</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="TransportationCreditVoucher" type="tns:TransportationCreditVoucherType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditsearchrequest" xmlns:sky="http://schemas.delta.com/ecredit/ecreditskymilessearch" xmlns:num="http://schemas.delta.com/ecredit/ecreditnumbersearch" xmlns:crit="http://schemas.delta.com/ecredit/ecreditsearchcriteria" xmlns:pref2="http://schemas.delta.com/common/requestinfo/v4" targetNamespace="http://schemas.delta.com/ecredit/ecreditsearchrequest" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <import namespace="http://schemas.delta.com/ecredit/ecreditsearchcriteria"/>
            <complexType name="ECertificateSearchType">
                <attribute name="ECertificateNumber" type="string"/>
            </complexType>
            <complexType name="ECreditSearchRequestType">
                <sequence>
                    <element ref="pref2:RequestInfo" minOccurs="0"/>
                    <element ref="crit:ECreditSearchCriteria" minOccurs="0"/>
                    <element ref="tns:ECertificateSearch" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="DocumentSearchType" type="string">
                    <annotation>
                        <documentation>Set to "ALL" to retrieve ECERTS and deltamatic documents.</documentation>
                        <documentation>Set to "EMD" to retrieve only documents from deltmatic database
		      				which is ECREDITS and ETICKETS. </documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="ECertificateSearch" type="tns:ECertificateSearchType"/>
            <element name="ECreditSearchCriteria" type="crit:ECreditSearchCriteriaType"/>
            <element name="ECreditSearchRequest" type="tns:ECreditSearchRequestType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/printer/v4" targetNamespace="http://schemas.delta.com/common/printer/v4" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PrinterInfoType">
                <xs:attribute name="AgentSetCategory" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Category from CASS SET LOCATION FILE
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="BartsUserFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Is user Barts enabled in CASS SET LOCATION FILE
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CrtAddress" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					WSINE of agent workstation that has this printer in
					its CASS SET LOCATION FILE
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NoPrintFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					If true go through all motions of printing but dont
					actually send output to the printer
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="OfficeNameCityCode" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					City code where office/printer is located
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="OfficeTypeCode" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>RES, FTO, CTO</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="OnArptLocationFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					AP indicator from CASS SET LOCATION FILE
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PrinterAddress" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Actual physical printer address of the printer
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PrinterType" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					ATB, BT, E3000 etc. from CASS SET LOCATION FILE
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="PrinterInfo" type="tns:PrinterInfoType"/>
        </xs:schema>
        <xsd:schema xmlns:y="http://schemas.delta.com/common/pnrcommontypes/v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:hct="http://schemas.delta.com/common/hostcontext/v1" xmlns:ri="http://schemas.delta.com/common/requestinfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns:pnr="http://schemas.delta.com/common/pnr/v3" xmlns:prp="http://schemas.delta.com/common/pnrrequestparams" xmlns:pi="http://schemas.delta.com/common/passengerinfo" xmlns:ptct="http://schemas.delta.com/common/passengertypecode" xmlns:af="http://schemas.delta.com/common/auditflag/v1" xmlns:di="http://schemas.delta.com/common/debuginfo/v3" xmlns:di4="http://schemas.delta.com/common/debuginfo/v4" xmlns:po="http://schemas.delta.com/common/pnroptions" xmlns:si="http://schemas.delta.com/common/segmentinfo" targetNamespace="http://schemas.delta.com/common/pnrcommontypes/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/pnrrequestparams"/>
            <xsd:import namespace="http://schemas.delta.com/common/passengerinfo"/>
            <xsd:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/passengertypecode"/>
            <xsd:import namespace="http://schemas.delta.com/common/pnroptions"/>
            <xsd:import namespace="http://schemas.delta.com/common/auditflag/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/pnr/v3"/>
            <xsd:import namespace="http://schemas.delta.com/common/segmentinfo"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v3"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/hostcontext/v1"/>
            <xsd:complexType name="AutoCreateRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element name="FlightInfo" type="y:FlightInfoType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="Phone" type="y:PhoneType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="PnrNameDataType" type="y:PnrNameDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="RemarkType" type="y:RemarkType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="TicketingTimeLimitType" type="y:TicketingTimeLimitType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="RequestOptionsType" type="y:RequestOptionsType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoCreateResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoDecodeRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="af:AuditFlag" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="RecordLocator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>X[6]</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="AutoDecodeResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoDivideRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="pi:PassengerInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="af:AuditFlag" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="RecordLocator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>X[6]</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="AutoDivideResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoRetrieveRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="pi:PassengerInfo" minOccurs="0"/>
                    <xsd:element ref="si:SegmentInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoRetrieveResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CopyInfoType">
                <xsd:attribute name="CopyType" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>A - segment data
M - passenger data
B - both</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerLoyaltyDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Loyalty data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerNameDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Name data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerPhoneDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Phone data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerRemarkDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Remark data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerTicketDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Ticket data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerTypeCodeDataFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Y = copy passenger Type Code data</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SegmentClassOfService" type="xsd:string"/>
                <xsd:attribute name="SegmentDateAdjustmentType" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>M - minus
P - plus</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SegmentNumberInPartyAdjustment" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>1-99 permitted</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SegmentNumberOfDaysAdjustment" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>1-331 permitted</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="CopyRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element name="CopyInfo" type="y:CopyInfoType"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CopyResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CreateRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element name="FlightInfo" type="y:FlightInfoType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="Phone" type="y:PhoneType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="PnrNameDataType" type="y:PnrNameDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="RemarkType" type="y:RemarkType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="TicketingTimeLimitType" type="y:TicketingTimeLimitType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="RequestOptionsType" type="y:RequestOptionsType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CreateResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DecodeRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DecodeResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DeleteDTIRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="ptct:PassengerTypeCode" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DeleteDTIResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DeleteTKIRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DeleteTKIResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DivideRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="pi:PassengerInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DivideResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="EndRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="po:PnrOptions" minOccurs="0"/>
                    <xsd:element ref="af:AuditFlag" minOccurs="0"/>
                    <xsd:element name="RedisplayFlag" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="EndResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="FlightInfoType">
                <xsd:attribute name="AirlineCode" type="xsd:string"/>
                <xsd:attribute name="ArrivalPoint" type="xsd:string"/>
                <xsd:attribute name="ArrivalTime" type="xsd:string"/>
                <xsd:attribute name="ClassOfService" type="xsd:string"/>
                <xsd:attribute name="ConnectionPoint" type="xsd:string"/>
                <xsd:attribute name="Date" type="xsd:string"/>
                <xsd:attribute name="DeparturePoint" type="xsd:string"/>
                <xsd:attribute name="DepartureTime" type="xsd:string"/>
                <xsd:attribute name="FlightNumber" type="xsd:string"/>
                <xsd:attribute name="ItineraryStatus" type="xsd:string"/>
                <xsd:attribute name="NumberInParty" type="xsd:string"/>
                <xsd:attribute name="PreviousItineraryStatus" type="xsd:string"/>
                <xsd:attribute name="SeatId" type="xsd:string"/>
                <xsd:attribute name="SeatStatus" type="xsd:string"/>
                <xsd:attribute name="SeatType" type="xsd:string"/>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
                <xsd:attribute name="StandbyIndicator" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="IgnoreRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element name="RedisplayFlag" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="IgnoreResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PhoneType">
                <xsd:attribute name="AreaCode" type="xsd:string"/>
                <xsd:attribute name="CityCode" type="xsd:string"/>
                <xsd:attribute name="CountryCode" type="xsd:string"/>
                <xsd:attribute name="Extension" type="xsd:string"/>
                <xsd:attribute name="FirstNameNumber" type="xsd:string"/>
                <xsd:attribute name="FreeformText" type="xsd:string"/>
                <xsd:attribute name="LastNameNumber" type="xsd:string"/>
                <xsd:attribute name="MarkedForDeletionFlag" type="xsd:string"/>
                <xsd:attribute name="Number" type="xsd:string"/>
                <xsd:attribute name="PhoneFieldNumber" type="xsd:string"/>
                <xsd:attribute name="RecordName" type="xsd:string"/>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
                <xsd:attribute name="Type" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="PnrNameDataType">
                <xsd:attribute name="CustomerID" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>NonRevenueStandbyFlag must=Y if this is a PPR Number.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FirstName" type="xsd:string"/>
                <xsd:attribute name="FirstNameNumber" type="xsd:string"/>
                <xsd:attribute name="LastName" type="xsd:string"/>
                <xsd:attribute name="LastNameNumber" type="xsd:string"/>
                <xsd:attribute name="NonRevenueStandbyFlag" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>If this is = Y then CustomerID must be a PPR number</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="RecordName" type="xsd:string"/>
                <xsd:attribute name="Remarks" type="xsd:string"/>
                <xsd:attribute name="RevenueStandbyFlag" type="xsd:string"/>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
                <xsd:attribute name="Suffix" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Sr., etc.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Title" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>Mr., Mrs., etc.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="RefreshRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="RefreshResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="RemarkType">
                <xsd:attribute name="FreeformText" type="xsd:string"/>
                <xsd:attribute name="GivenNameNumber" type="xsd:string"/>
                <xsd:attribute name="LastNameNumber" type="xsd:string"/>
                <xsd:attribute name="MarkedForDeletionFlag" type="xsd:string"/>
                <xsd:attribute name="RecordName" type="xsd:string"/>
                <xsd:attribute name="RemarkNumber" type="xsd:string"/>
                <xsd:attribute name="RemarkType" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>RRMK, SPCL, ADDR.</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
                <xsd:attribute name="UrgentRofMessageFlag" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="RequestOptionsType">
                <xsd:attribute name="RequestOption1" type="xsd:string"/>
                <xsd:attribute name="RequestOption2" type="xsd:string"/>
                <xsd:attribute name="RequestOption3" type="xsd:string"/>
                <xsd:attribute name="RequestOption4" type="xsd:string"/>
                <xsd:attribute name="RequestOption5" type="xsd:string"/>
                <xsd:attribute name="RequestOption6" type="xsd:string"/>
                <xsd:attribute name="RequestOption7" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="RetrieveRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="pi:PassengerInfo" minOccurs="0"/>
                    <xsd:element ref="si:SegmentInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="RetrieveResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="SetupContextRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="RecordLocator" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="SetupContextResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="SessionId" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="TeardownContextRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="y:EndRequest" minOccurs="0"/>
                    <xsd:element ref="y:IgnoreRequest" minOccurs="0"/>
                    <xsd:element ref="y:RefreshRequest" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="DoNotDestroySessionFlag" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="TeardownContextResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="TicketingTimeLimitType">
                <xsd:attribute name="FirstNameNumber" type="xsd:string"/>
                <xsd:attribute name="FreeformText" type="xsd:string"/>
                <xsd:attribute name="LastNameNumber" type="xsd:string"/>
                <xsd:attribute name="RecordName" type="xsd:string"/>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="VerifyDTIRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="VerifyDTIResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="VerifyTKIRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="VerifyEndorsement" type="xsd:string"/>
                <xsd:attribute name="VerifySegmentSelect" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="VerifyTKIResponseType">
                <xsd:sequence>
                    <xsd:element ref="pnr:Pnr" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:element name="AutoCreateRequest" type="y:AutoCreateRequestType"/>
            <xsd:element name="AutoCreateResponse" type="y:AutoCreateResponseType"/>
            <xsd:element name="AutoDecodeRequest" type="y:AutoDecodeRequestType"/>
            <xsd:element name="AutoDecodeResponse" type="y:AutoDecodeResponseType"/>
            <xsd:element name="AutoDivideRequest" type="y:AutoDivideRequestType"/>
            <xsd:element name="AutoDivideResponse" type="y:AutoDivideResponseType"/>
            <xsd:element name="AutoRetrieveRequest" type="y:AutoRetrieveRequestType"/>
            <xsd:element name="AutoRetrieveResponse" type="y:AutoRetrieveResponseType"/>
            <xsd:element name="CopyRequest" type="y:CopyRequestType"/>
            <xsd:element name="CopyResponse" type="y:CopyResponseType"/>
            <xsd:element name="CreateRequest" type="y:CreateRequestType"/>
            <xsd:element name="CreateResponse" type="y:CreateResponseType"/>
            <xsd:element name="DecodeRequest" type="y:DecodeRequestType"/>
            <xsd:element name="DecodeResponse" type="y:DecodeResponseType"/>
            <xsd:element name="DeleteDTIRequest" type="y:DeleteDTIRequestType"/>
            <xsd:element name="DeleteDTIResponse" type="y:DeleteDTIResponseType"/>
            <xsd:element name="DeleteTKIRequest" type="y:DeleteTKIRequestType"/>
            <xsd:element name="DeleteTKIResponse" type="y:DeleteTKIResponseType"/>
            <xsd:element name="DivideRequest" type="y:DivideRequestType"/>
            <xsd:element name="DivideResponse" type="y:DivideResponseType"/>
            <xsd:element name="EndRequest" type="y:EndRequestType"/>
            <xsd:element name="EndResponse" type="y:EndResponseType"/>
            <xsd:element name="IgnoreRequest" type="y:IgnoreRequestType"/>
            <xsd:element name="IgnoreResponse" type="y:IgnoreResponseType"/>
            <xsd:element name="RefreshRequest" type="y:RefreshRequestType"/>
            <xsd:element name="RefreshResponse" type="y:RefreshResponseType"/>
            <xsd:element name="RetrieveRequest" type="y:RetrieveRequestType"/>
            <xsd:element name="RetrieveResponse" type="y:RetrieveResponseType"/>
            <xsd:element name="SetupContextRequest" type="y:SetupContextRequestType"/>
            <xsd:element name="SetupContextResponse" type="y:SetupContextResponseType"/>
            <xsd:element name="TeardownContextRequest" type="y:TeardownContextRequestType"/>
            <xsd:element name="TeardownContextResponse" type="y:TeardownContextResponseType"/>
            <xsd:element name="VerifyDTIRequest" type="y:VerifyDTIRequestType"/>
            <xsd:element name="VerifyDTIResponse" type="y:VerifyDTIResponseType"/>
            <xsd:element name="VerifyTKIRequest" type="y:VerifyTKIRequestType"/>
            <xsd:element name="VerifyTKIResponse" type="y:VerifyTKIResponseType"/>
        </xsd:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/hostcontext/v1" xmlns:rqInfo="http://schemas.delta.com/common/requestinfo/v4" xmlns:respInfo="http://schemas.delta.com/common/responseinfo/v1" xmlns:dbgInfo="http://schemas.delta.com/common/debuginfo/v4" xmlns:fault="http://schemas.delta.com/common/fault/v4" xmlns:rqopt="http://schemas.delta.com/common/requestoption/v1" xmlns:err="http://schemas.delta.com/common/error/v4" xmlns:adv="http://schemas.delta.com/common/advisorymessage/v2" targetNamespace="http://schemas.delta.com/common/hostcontext/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <import namespace="http://schemas.delta.com/common/fault/v4"/>
            <import namespace="http://schemas.delta.com/common/requestoption/v1"/>
            <import namespace="http://schemas.delta.com/common/error/v4"/>
            <import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <complexType name="ChangePasswordRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                </sequence>
                <attribute name="NewPassword" type="string"/>
            </complexType>
            <complexType name="ChangePasswordResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                    <element name="ChangedPassword" type="boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="CreateAndSwingRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="CreateAndSwingResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                    <element name="SwingSuccess" type="boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="CreateRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="CreateResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="DestroyRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="DestroyResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="RetrieveRFRRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                    <element ref="rqopt:RequestOption" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>REQOPT , Version 1.4</documentation>
                        </annotation>
                    </element>
                </sequence>
            </complexType>
            <complexType name="RetrieveRFRResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                    <element ref="rqopt:RequestOption" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>REQOPT , Version 1.4</documentation>
                        </annotation>
                    </element>
                    <element ref="adv:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>
            <complexType name="SwingCityDutyCodeRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo"/>
                </sequence>
            </complexType>
            <complexType name="SwingCityDutyCodeResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                    <element name="SwingSuccess" type="boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <complexType name="ValidateLogonRequestType">
                <sequence>
                    <element ref="rqInfo:RequestInfo" minOccurs="0"/>
                </sequence>
                <attribute name="NewPassword" type="string"/>
            </complexType>
            <complexType name="ValidateLogonResponseType">
                <sequence>
                    <element ref="respInfo:ResponseInfo" minOccurs="0"/>
                    <element ref="dbgInfo:DebugInfo" minOccurs="0"/>
                    <element name="ValidLogon" type="boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <element name="ChangePasswordRequest" type="tns:ChangePasswordRequestType"/>
            <element name="ChangePasswordResponse" type="tns:ChangePasswordResponseType"/>
            <element name="CreateAndSwingRequest" type="tns:CreateAndSwingRequestType"/>
            <element name="CreateAndSwingResponse" type="tns:CreateAndSwingResponseType"/>
            <element name="CreateRequest" type="tns:CreateRequestType"/>
            <element name="CreateResponse" type="tns:CreateResponseType"/>
            <element name="DestroyRequest" type="tns:DestroyRequestType"/>
            <element name="DestroyResponse" type="tns:DestroyResponseType"/>
            <element name="RetrieveRFRRequest" type="tns:RetrieveRFRRequestType"/>
            <element name="RetrieveRFRResponse" type="tns:RetrieveRFRResponseType"/>
            <element name="SwingCityDutyCodeRequest" type="tns:SwingCityDutyCodeRequestType"/>
            <element name="SwingCityDutyCodeResponse" type="tns:SwingCityDutyCodeResponseType"/>
            <element name="ValidateLogonRequest" type="tns:ValidateLogonRequestType"/>
            <element name="ValidateLogonResponse" type="tns:ValidateLogonResponseType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/userauthdata/v2" targetNamespace="http://schemas.delta.com/common/userauthdata/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="UserAuthorizationDataType">
                <attribute name="AgentCityCode" type="string">
                    <annotation>
                        <documentation>a3</documentation>
                    </annotation>
                </attribute>
                <attribute name="RoleIndicator" type="string">
                    <annotation>
                        <documentation>an5..30</documentation>
                    </annotation>
                </attribute>
                <attribute name="SecurityId" type="string">
                    <annotation>
                        <documentation>an1..10 User Login Id </documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="UserAuthorizationData" type="tns:UserAuthorizationDataType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditidnumbersearch" xmlns:ecrd="http://schemas.delta.com/ecredit/ecredit" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/ecredit/ecreditidnumbersearch" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/ecredit/ecredit"/>
            <import namespace="http://schemas.delta.com/common/error/v4"/>
            <complexType name="ECreditIDNumberSearchType">
                <sequence>
                    <element ref="ecrd:ECredit" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="AgencyNumber" type="string"/>
                <attribute name="CorpID" type="string"/>
                <attribute name="MaxNumberResults" type="string"/>
                <attribute name="OtherID" type="string"/>
                <attribute name="PPRNumber" type="string"/>
                <attribute name="SkyBonusNumber" type="string"/>
            </complexType>
            <element name="ECreditIDNumberSearch" type="tns:ECreditIDNumberSearchType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/responseinfo/v1" targetNamespace="http://schemas.delta.com/common/responseinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="ResponseInfoType">
                <attribute name="AdditionalInfo" type="string">
                    <annotation>
                        <documentation>May contain semi-colon delimited strings</documentation>
                    </annotation>
                </attribute>
                <attribute name="ServiceTrackingId" type="string">
                    <annotation>
                        <documentation>May be provided by service...The concatenated node name, service name, operation name, and a unique randomly generated number.  If client logs this, then we can tie the service log entries to the client log entries (especially if client did not send a TransactionId)</documentation>
                    </annotation>
                </attribute>
                <attribute name="TransactionId" type="string">
                    <annotation>
                        <documentation>May be provided by client...should be same for each "transaction" on client side</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="ResponseInfo" type="tns:ResponseInfoType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/advisorymessage/v2" targetNamespace="http://schemas.delta.com/common/advisorymessage/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="AdvisoryMessageType">
                <xs:attribute name="FreeformText" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>X[1..64]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="MessageNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						X[1..5] (not used)
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Process" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						X[1..6] (not used) process where message
						generated
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Spare" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						[1..6] (not used) Spares for TPF use
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SscRequest" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>X[6] (not used)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="AdvisoryMessage" type="y:AdvisoryMessageType"/>
        </xs:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/emdmiscdoc/v1" targetNamespace="http://schemas.delta.com/common/emdmiscdoc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="EmdMiscDocType">
                <annotation>
                    <documentation>
				Information about EMD Misc Doc type. This complex type corresponds to EMDDOC 
			</documentation>
                </annotation>
                <attribute name="Amount" type="string">
                    <annotation>
                        <documentation>
	                 		Amount [n1..8]
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="AssociateEtktCoupon" type="string">
                    <annotation>
                        <documentation>
	                 		Associated ETicket Coupon [n1]
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="AssociateOrDisassociate" type="string">
                    <annotation>
                        <documentation>
	                 		A - Associate
	                 		D - Disassociate
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="Currency" type="string">
                    <annotation>
                        <documentation>
	                 		Currency [a3]
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ETNumber" type="string">
                    <annotation>
                        <documentation>
		     		ETicketNumber [n14]
		     	</documentation>
                    </annotation>
                </attribute>
                <attribute name="MiscDocCoupon" type="string">
                    <annotation>
                        <documentation>
	                 		Misc Document Coupon [n1]
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="MiscDocNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Miscellanous Document Number [n14]
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="MiscDocType" type="string">
                    <annotation>
                        <documentation>
	                 		Misc Document Type [a3..4]
	                 	</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="EmdMiscDoc" type="tns:EmdMiscDocType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/auditflag/v1" targetNamespace="http://schemas.delta.com/common/auditflag/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="AuditFlagType">
                <xs:attribute name="DeleteDTI" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>To Delete DTI.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="DeleteTKI" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>To Delete TKI.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="QFail" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					QFAIL indicator allows "continuity audit errors" to
					be overridden by the QFAIL demand code.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="VerifyDTI" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>To Verify DTI.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="VerifyTKI" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>To Verify TKI.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="AuditFlag" type="y:AuditFlagType"/>
        </xs:schema>
        <schema xmlns:tns="http://schemas.delta.com/common/fault/v3" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:pref="http://schemas.delta.com/common/debuginfo/v3" targetNamespace="http://schemas.delta.com/common/fault/v3" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/common/debuginfo/v3"/>
            <complexType name="FaultDetailsType">
                <sequence>
                    <element ref="pref:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="AdditionalInfo" type="string">
                    <annotation>
                        <documentation>
					information such as backend request, timings, etc --
					anything that would be helpful in determining the
					cause of the error
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorCode" type="string">
                    <annotation>
                        <documentation>
					If there is no error code (from backend or
					middleware) then leave blank
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorMessage" type="string">
                    <annotation>
                        <documentation>
					Error Message - e.g: invalid arguments
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="StackTraceInfo" type="string">
                    <annotation>
                        <documentation>Error StackTrace</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="FaultDetailedInfo" type="tns:FaultDetailsType"/>
        </schema>
        <schema xmlns:pref="http://schemas.delta.com/common/debuginfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/fault/v4" targetNamespace="http://schemas.delta.com/common/fault/v4" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <complexType name="BusinessFaultType">
                <sequence>
                    <element ref="tns:FaultDetailedInfo"/>
                </sequence>
            </complexType>
            <complexType name="FaultDetailsType">
                <sequence>
                    <element ref="pref:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="resp:ResponseInfo" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="AdditionalInfo" type="string">
                    <annotation>
                        <documentation>
					information such as backend request, timings, etc --
					anything that would be helpful in determining the
					cause of the error
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorCode" type="string">
                    <annotation>
                        <documentation>
					If there is no error code (from backend or
					middleware) then leave blank
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ErrorMessage" type="string">
                    <annotation>
                        <documentation>
					Error Message - e.g: invalid arguments
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="StackTraceInfo" type="string">
                    <annotation>
                        <documentation>Error StackTrace</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <complexType name="SystemFaultType">
                <sequence>
                    <element ref="tns:FaultDetailedInfo"/>
                </sequence>
            </complexType>
            <element name="BusinessFault" type="tns:BusinessFaultType"/>
            <element name="FaultDetailedInfo" type="tns:FaultDetailsType"/>
            <element name="SystemFault" type="tns:SystemFaultType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/ptrauthdata/v2" targetNamespace="http://schemas.delta.com/common/ptrauthdata/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="PrinterAuthorizationDataType">
                <attribute name="ATBPrinterAddress" type="string">
                    <annotation>
                        <documentation>an6</documentation>
                    </annotation>
                </attribute>
                <attribute name="AdminPrinterAddress" type="string">
                    <annotation>
                        <documentation>an6</documentation>
                    </annotation>
                </attribute>
                <attribute name="BagPrinterAddress" type="string">
                    <annotation>
                        <documentation>an6</documentation>
                    </annotation>
                </attribute>
                <attribute name="BoardingCardPrinterAddress" type="string">
                    <annotation>
                        <documentation>an6 
					ET-6000 can be used for 2D boarding cards
				        IER-567 if specified used for everything 
				        ATB can be used for 1D boarding cards
 				</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="PrinterAuthorizationData" type="tns:PrinterAuthorizationDataType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/leoinfo/v1" targetNamespace="http://schemas.delta.com/common/leoinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="LawEnforcementOfficerInfoType">
                <xs:attribute name="AgencyAddress" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>ans[..30] e.g. 100 Pennsylvania Ave, Washington DC
				   		special chars: dash(-) and blanks allowed.
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ConnectionFlightNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>n[1..4] e.g. 2408..right justify left-filled with zeros</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ConnectionFlightSeatId" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>an[3] e.g. 12A</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ConnectionOffPoint" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[3] e.g. SLC</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CountyAgency" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g. Y or blank</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FederalAgency" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g. Y or blank</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FlightDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>an[7] e.g. DDMMMYY</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FlightNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>n[1..4] e.g. 2408
						right justify left-filled with zeros
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="GovernmentAgency" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>ans[1..30] e.g. FBI</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="LocalAgency" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g. Y or blank</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>as[..36] e.g. LASTNAME/FIRSTNAME</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="OffPoint" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[3] e.g. ATL</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="OfficerArmed" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g.
						A = Armed
						U = Unarmed
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PrimaryFlightSeatId" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>an[3] e.g. 23A</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PrisonerEscort" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g. Y or N</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="StateAgency" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>a[1] e.g. Y or blank</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="eTicketNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>n[13] e.g. 9999999999999</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="LawEnforcementOfficerInfo" type="tns:LawEnforcementOfficerInfoType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/printflightvoucher/v1" targetNamespace="http://schemas.delta.com/printflightvoucher/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PassengerInfoType">
                <xs:attribute name="GivenNameNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						FirstName Number
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SurnameNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>LastName Number</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="TransactionBoardCity" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						a3..5 Board City of  Itinerary Check-in
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="PassengerInfo" type="y:PassengerInfoType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/segmentinfo" targetNamespace="http://schemas.delta.com/common/segmentinfo" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="SegmentInfoType">
                <xs:attribute name="AirlineCode" type="xs:string"/>
                <xs:attribute name="ArnkFlag" type="xs:string"/>
                <xs:attribute name="ArrivalCity" type="xs:string"/>
                <xs:attribute name="ArrivalTime" type="xs:string"/>
                <xs:attribute name="ClassOfService" type="xs:string"/>
                <xs:attribute name="ConnectionCity" type="xs:string"/>
                <xs:attribute name="Date" type="xs:string"/>
                <xs:attribute name="DepartureCity" type="xs:string"/>
                <xs:attribute name="DepartureTime" type="xs:string"/>
                <xs:attribute name="FlightNumber" type="xs:string"/>
                <xs:attribute name="NumberInParty" type="xs:string"/>
                <xs:attribute name="OpenFlag" type="xs:string"/>
                <xs:attribute name="PreviousStatus" type="xs:string"/>
                <xs:attribute name="SeatId" type="xs:string"/>
                <xs:attribute name="SeatStatus" type="xs:string"/>
                <xs:attribute name="SeatType" type="xs:string"/>
                <xs:attribute name="SegmentNumber" type="xs:string"/>
                <xs:attribute name="SequenceNumber" type="xs:string"/>
                <xs:attribute name="StandbyFlag" type="xs:string"/>
                <xs:attribute name="Status" type="xs:string"/>
            </xs:complexType>
            <xs:element name="SegmentInfo" type="y:SegmentInfoType"/>
        </xs:schema>
        <xs:schema xmlns:pref1="http://schemas.delta.com/common/requestinfo/v4" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/debuginfo/v4" targetNamespace="http://schemas.delta.com/common/debuginfo/v4" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xs:complexType name="DebugInfoType">
                <xs:sequence>
                    <xs:element name="ConfigurationSettings" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						Configuration Settings
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceRequest" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						Actual data sent to Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceResponse" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						Actual data received from Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						Name of the Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="TransportInfo" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						e.g.Transport Wsine
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Timers" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						Execution times at various design layers
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="AdditionalInfo" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
					any information that would be helpful in understanding the response
					e.g. the specific step name in a series of steps
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="RequestInfo" type="pref1:RequestInfoType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
						The actual RequestInfo objects sent within the
						request.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DebugInfo" type="tns:DebugInfoType"/>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/documentprinterinfo/v1" targetNamespace="http://schemas.delta.com/documentprinterinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="DocumentCommonInfoType">
                <xsd:sequence>
                    <xsd:element name="StartOfCoupon" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="DataForAllCouponInSeries" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="PectabId" type="tns:PrintStreamDataType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DocumentPrinterInfoType">
                <xsd:sequence>
                    <xsd:element name="UniqueCouponData" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="CouponSeriesNumber" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="BarCodeData" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="DocumentName" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="PrintStatusText" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="PassengerName" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="ChoiceTextHeader" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="ValidityText" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="ValidDateText" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="TermsAndConditions" type="tns:PrintStreamDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="ReadableBarcodeData" type="tns:PrintStreamDataType" minOccurs="0"/>
                    <xsd:element name="ChoiceText" type="tns:PrintStreamDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="UndefinedElement" type="tns:PrintStreamDataType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="PrintStreamDataType">
                <xsd:attribute name="PectabItemNumber" type="xsd:string"/>
                <xsd:attribute name="Value" type="xsd:string"/>
            </xsd:complexType>
            <xsd:element name="DocumentCommonInfo" type="tns:DocumentCommonInfoType"/>
            <xsd:element name="DocumentPrinterInfo" type="tns:DocumentPrinterInfoType"/>
        </xsd:schema>
        <xs:schema xmlns:pref1="http://schemas.delta.com/common/requestinfo/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/debuginfo/v3" targetNamespace="http://schemas.delta.com/common/debuginfo/v3" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/common/requestinfo/v3"/>
            <xs:complexType name="DebugInfoType">
                <xs:sequence>
                    <xs:element name="ConfigurationSettings" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Configuration Settings
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceRequest" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Actual data sent to Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceResponse" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Actual data received from Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="DataSourceName" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Name of the Data Source
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Timers" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
						Execution times at various design layers
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="RequestInfo" type="pref1:RequestInfoType">
                        <xs:annotation>
                            <xs:documentation>
						The actual RequestInfo objects sent within the
						request.
					</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DebugInfo" type="tns:DebugInfoType"/>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/misc/ecertificateresponse" xmlns:brs="http://schemas.delta.com/common/baseresponseinfo/v2" xmlns:ns1="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/misc/ecertificateresponse" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/baseresponseinfo/v2"/>
            <xsd:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xsd:complexType name="CertificateUsagesType">
                <xsd:attribute name="EBusinessFunctionStartLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2005-11-22 12:06:34)					
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ECertificateDocumentIdentifier" type="xsd:string"/>
                <xsd:attribute name="RecordLocatorIdentifier" type="xsd:string"/>
                <xsd:attribute name="TicketDocumentNumber" type="xsd:string"/>
                <xsd:attribute name="WorldPerksNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="CompartmentCodesType">
                <xsd:attribute name="CarrierCode" type="xsd:string"/>
                <xsd:attribute name="CompartmentCode" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="CustomerType">
                <xsd:attribute name="CreationLocalTimestamp" type="xsd:string"/>
                <xsd:attribute name="CustomerExternalReferenceNumber" type="xsd:string"/>
                <xsd:attribute name="CustomerLastName" type="xsd:string"/>
                <xsd:attribute name="ECertificateCustomerAffiliateIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificateCustomerAffiliateTypeCode" type="xsd:string"/>
                <xsd:attribute name="ECertificateGroupIdentifier" type="xsd:string"/>
                <xsd:attribute name="FirstName" type="xsd:string"/>
                <xsd:attribute name="GlobalCustomerIdentifier" type="xsd:string"/>
                <xsd:attribute name="MiddleName" type="xsd:string"/>
                <xsd:attribute name="PostalAreaCode" type="xsd:string"/>
                <xsd:attribute name="PrefixNameCode" type="xsd:string"/>
                <xsd:attribute name="SkyMilesNumber" type="xsd:string"/>
                <xsd:attribute name="SuffixNameCode" type="xsd:string"/>
                <xsd:attribute name="WorldPerksNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="DaysOfWeekType">
                <xsd:attribute name="DayOfWeekName" type="xsd:string"/>
                <xsd:attribute name="DayOfWeekNumber" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="DebitCreditCardTravelType">
                <xsd:attribute name="DebitCreditCardLevelCode" type="xsd:string"/>
                <xsd:attribute name="DebitCreditCardTravelTypeCode" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="DebitCreditCardsType">
                <xsd:attribute name="ECertificateProgramDebitCreditCardTypeCode" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="ECertRequestOptionsType">
                <xsd:attribute name="CustomerAffiliateIdentifier" type="xsd:string"/>
                <xsd:attribute name="CustomerAffiliateTypeCode" type="xsd:string"/>
                <xsd:attribute name="DocumentNumber" type="xsd:string"/>
                <xsd:attribute name="FrequentFlyerNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="ECertificateResponseType">
                <xsd:sequence>
                    <xsd:element name="ECertRequestOptions" type="tns:ECertRequestOptionsType"/>
                    <xsd:element name="EcertDocument" type="tns:EcertDocumentType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="FreeformText" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="EcertDocumentType">
                <xsd:sequence>
                    <xsd:element name="Customer" type="tns:CustomerType" minOccurs="0"/>
                    <xsd:element name="Promotions" type="tns:PromotionsType" minOccurs="0"/>
                    <xsd:element name="CertificateUsages" type="tns:CertificateUsagesType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="CustomerSupportAgentNumber" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentCreationLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ECertificateDocumentIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentRedemptionLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ECertificateDocumentUpdateLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="ECertificateDocumentUsageCount" type="xsd:string"/>
                <xsd:attribute name="ECertificateGroupIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificateRedemptionCode" type="xsd:string"/>
                <xsd:attribute name="GlobalCustomerIdentifier" type="xsd:string"/>
                <xsd:attribute name="LastUpdateLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="WithholdECertificateDocumentIndicator" type="xsd:string"/>
                <xsd:attribute name="WorldPerksECertificateDocumentIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="PromotionsType">
                <xsd:sequence>
                    <xsd:element name="CompartmentCodes" type="tns:CompartmentCodesType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="DaysOfWeek" type="tns:DaysOfWeekType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="DebitCreditCards" type="tns:DebitCreditCardsType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="DebitCreditCardTravel" type="tns:DebitCreditCardTravelType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="TransportationStations" type="tns:TransportationStationsType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="TermsAndConditions" type="tns:TermsAndConditionsType" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="AdvancePurchaseRequiredDayCount" type="xsd:string"/>
                <xsd:attribute name="CreationAgentNumber" type="xsd:string"/>
                <xsd:attribute name="DistributionAgentNumber" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentActualDistributionLocalDate" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentAgentDistributionLocalDate" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentMaximumUsageCount" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentScheduledDistributionLocalDate" type="xsd:string"/>
                <xsd:attribute name="ECertificateDocumentTransferIndicator" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionDescription" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionDistributionMethodCode" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionName" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionStatusCode" type="xsd:string"/>
                <xsd:attribute name="ExcludeMedallionIndicator" type="xsd:string"/>
                <xsd:attribute name="FareBasisCode" type="xsd:string"/>
                <xsd:attribute name="GRSLocatorIdentifier" type="xsd:string"/>
                <xsd:attribute name="GuestSkymilesMembershipRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="ImplementationAgentNumber" type="xsd:string"/>
                <xsd:attribute name="LastUpdateAgentNumber" type="xsd:string"/>
                <xsd:attribute name="MaximumStayDayCount" type="xsd:string"/>
                <xsd:attribute name="MinimumStayDayCount" type="xsd:string"/>
                <xsd:attribute name="MultipleFlightLegRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="Non-StopFlightRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="PricingAgentNumber" type="xsd:string"/>
                <xsd:attribute name="PromotionAwardTypeCode" type="xsd:string"/>
                <xsd:attribute name="PromotionCertificateTypeCode" type="xsd:string"/>
                <xsd:attribute name="PromotionCreationLocalTimestamp" type="xsd:string"/>
                <xsd:attribute name="PromotionDeltaExpressIndicator" type="xsd:string"/>
                <xsd:attribute name="PromotionDeltaShuttleIndicator" type="xsd:string"/>
                <xsd:attribute name="PromotionDisableIndicator" type="xsd:string"/>
                <xsd:attribute name="PromotionDiscountQuantity" type="xsd:string"/>
                <xsd:attribute name="PromotionEffectiveLocalDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PromotionExpirationLocalDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PromotionGuestAllowedCount" type="xsd:string"/>
                <xsd:attribute name="PromotionImplementationLocalTimestamp" type="xsd:string"/>
                <xsd:attribute name="PromotionInternetOnlyIndicator" type="xsd:string"/>
                <xsd:attribute name="PromotionPartnerCarrierIndicator" type="xsd:string"/>
                <xsd:attribute name="PromotionPricingApprovedLocalTimestamp" type="xsd:string"/>
                <xsd:attribute name="PromotionTravelEndLocalDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PromotionTravelStartLocalDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PromotionUpdateLocalTimestamp" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)							
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PromotionUsageCount" type="xsd:string"/>
                <xsd:attribute name="RecipientSkymilesMembershipRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="RoundTripRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="SaturdayNightRequiredIndicator" type="xsd:string"/>
                <xsd:attribute name="SecureRateAgreementCode" type="xsd:string"/>
                <xsd:attribute name="SkymilesMemberOnlyIndicator" type="xsd:string"/>
                <xsd:attribute name="TicketDesignatorCode" type="xsd:string"/>
                <xsd:attribute name="TicketRefundableIndicator" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="RetrieveECertificateResponseType">
                <xsd:sequence>
                    <xsd:element ref="brs:BaseResponseInfo" minOccurs="0"/>
                    <xsd:element name="ECertificateResponse" type="tns:ECertificateResponseType" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="ns1:Error" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="TermsAndConditionsType">
                <xsd:sequence>
                    <xsd:element name="ECertificateTermConditionText" type="xsd:string"/>
                </xsd:sequence>
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="TransportationStationsType">
                <xsd:attribute name="ECertificatePromotionIdentifier" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionMarketTypeCode" type="xsd:string"/>
                <xsd:attribute name="ECertificatePromotionStationCode" type="xsd:string"/>
                <xsd:attribute name="OriginDestinationCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:element name="RetrieveECertificateResponse" type="tns:RetrieveECertificateResponseType"/>
        </xsd:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/baseresponseinfo/v2" targetNamespace="http://schemas.delta.com/common/baseresponseinfo/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="BaseResponseInfoType">
                <annotation>
                    <documentation>
        		The BaseResponseInfo returns information entered as part
        		of BaseRequestInfo and an optional ServiceTrackingId
        		attribute.

        	</documentation>
                </annotation>
                <attribute name="ApplicationName" use="required" type="string">
                    <annotation>
                        <documentation>
					The name with whihc the application identifies itself.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="SvcTrackingId" type="string">
                    <annotation>
                        <documentation>
					unique Id which is created and be used by the service to trace the path of the request
		and sent back to the client. If the client logs this in its log, it can be used during support calls to track the
		request.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TransactionId" type="string">
                    <annotation>
                        <documentation>
					The unique transaction id for this request. This
					must be created and provided by the client and is
					used in instrumentation logging and reporting.
				</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="BaseResponseInfo" type="tns:BaseResponseInfoType"/>
        </schema>
        <xs:schema xmlns:am="http://schemas.delta.com/common/advisorymessage/v2" xmlns:di="http://schemas.delta.com/common/debuginfo/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/pnr/v3" targetNamespace="http://schemas.delta.com/common/pnr/v3" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/common/debuginfo/v3"/>
            <xs:import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <xs:complexType name="PnrType">
                <xs:sequence>
                    <xs:element ref="di:DebugInfo" minOccurs="0"/>
                    <xs:element ref="am:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="y:Ptc" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: PTC V1.0 Psgr. Type Code Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SeatOa" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: BASSEO V1.4 OA Seat Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:RecordLocator" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: RLC V1.4 Record Locator Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:HistoryCreditOrSignature" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: HSTSGN V1.0 PNR History Credit Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketNumberData3" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: D5E003 V1.1 Ticket Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:ApprovalCode" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: AP V1.1 Approval Code Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:OtherServiceInformation" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: OSI V1.0 OSI Other Supp. Info Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:Dti" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: DTI V1.3 Ticket Image Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SegmentDl" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: BASDLV2.2 DL Itinerary Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketNumberData1" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: D5E001 V1.1 Ticket Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:HistoryPnrCreation" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: HSTCRE V1.0 PNR Create History Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketPassengerInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: TIPNI V1.0 Ticket Display Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketingTimeLimit" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: LMT V1.0 Tktg Time Limit Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:Phone" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: PHN V1.1 Phone Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:PassengerSpecial" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: NMESPL V1.0 PNR Name Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketInformation" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: TITDI V1.0 Ticket Display Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SegmentOa" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: BASOA V1.5 OA Itin Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketingField" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: TKT V1.0 Ticketing Field Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketCouponInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: TICOU V1.1 Ticket Display Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketingInstruction" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: TKI V1.1 Ticketing Instruction Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:DtiSegmentInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: DTISEG V1.2 Ticket Image Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:FareCalc" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: FCC V1.0 Fare Calc Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SeatDl" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: BASSED V1.4 DL Seat Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:Remark" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: RMK V1.2 Remark Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SpecialServiceRequest" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: SSR V1.2 Special Service Rqst Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:StoredFareData" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: FQC V1.1 $D Stored Fare Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:Passenger" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: NME V1.1 PNR Name Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:FormOfPayment" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: FOP V1.0 Fare Calc Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:SegmentAdditionalInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: DAI V1.2 Additional Itin Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketData" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: D5CB V1.2 Ticket Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:TicketNumberData2" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: D5E002 V1.0 Ticket Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:DtiTerminatingCity" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: DTITER V1.1 Ticket Image Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:FrequentFlyer" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: FREQ V1.0 FF Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:HistoryActionItem" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: HSTITM V1.0 Action Item History</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="y:ElectronicTicketingData" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Phat-R Workbook: ETKELG V1.0 Elec. Tkt Eligibility Data</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ApprovalCode">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: AP V1.1 Approval Code Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AmericanExpressFlag" type="xs:string"/>
                    <xs:attribute name="ApUsedFlag" type="xs:string"/>
                    <xs:attribute name="CreditCardApprovalCode" type="xs:string"/>
                    <xs:attribute name="CreditCardExpDate" type="xs:string"/>
                    <xs:attribute name="CreditCardNumber" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="RemarkNumber" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="Dti">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: DTI V1.3 Ticket Image Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AdvisoryMessage" type="xs:string"/>
                    <xs:attribute name="BaseAmount" type="xs:string"/>
                    <xs:attribute name="BaseCurrency" type="xs:string"/>
                    <xs:attribute name="BooksCount" type="xs:string"/>
                    <xs:attribute name="DtiCount" type="xs:string"/>
                    <xs:attribute name="EquivalentFarePaidAmount" type="xs:string"/>
                    <xs:attribute name="EquivalentFarePaidCurrency" type="xs:string"/>
                    <xs:attribute name="EquivalentFarePaidMinimumFlag" type="xs:string"/>
                    <xs:attribute name="ExpandedPassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="FarecalcType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>F, W, or blank.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="InternationalFlag" type="xs:string"/>
                    <xs:attribute name="InternationalSalesCode" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="PassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="Tax1Amount" type="xs:string"/>
                    <xs:attribute name="Tax1Type" type="xs:string"/>
                    <xs:attribute name="Tax2Amount" type="xs:string"/>
                    <xs:attribute name="Tax2Type" type="xs:string"/>
                    <xs:attribute name="Tax3Amount" type="xs:string"/>
                    <xs:attribute name="Tax3Type" type="xs:string"/>
                    <xs:attribute name="TaxItemCount" type="xs:string"/>
                    <xs:attribute name="TotalFareAmount" type="xs:string"/>
                    <xs:attribute name="TotalFareCurrency" type="xs:string"/>
                    <xs:attribute name="TotalFareType" type="xs:string"/>
                    <xs:attribute name="TotalTax" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="DtiSegmentInfo">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: DTISEG V1.2 Ticket Image Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="BookNumber" type="xs:string"/>
                    <xs:attribute name="Carrier" type="xs:string"/>
                    <xs:attribute name="ClassOfService" type="xs:string"/>
                    <xs:attribute name="DepartureDate" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureTime" type="xs:string"/>
                    <xs:attribute name="ExpandedPassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="FarebasisFareclassCode" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="ItinerarySegmentNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="NotValidAfterDate" type="xs:string"/>
                    <xs:attribute name="NotValidBeforeDate" type="xs:string"/>
                    <xs:attribute name="OpenFlag" type="xs:string"/>
                    <xs:attribute name="PassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentAmount" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SegmentStatus" type="xs:string"/>
                    <xs:attribute name="StopFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>O=Stop, X=Connection.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="SurchargeAmount" type="xs:string"/>
                    <xs:attribute name="SurchargeIdentifier" type="xs:string"/>
                    <xs:attribute name="VoidFlag" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="DtiTerminatingCity">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: DTITER V1.1 Ticket Image Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="BookNumber" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="PassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="StopIndicator" type="xs:string"/>
                    <xs:attribute name="TerminatingCity" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="ElectronicTicketingData">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: ETKELG V1.0 Elec. Tkt Eligibility Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="TicketStatus" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>N=Itinerary is not eligible for ET, E=is eligible for ET, Y=Pnr is ET'ed.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="FareCalc">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: FCC V1.0 Fare Calc Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="FormOfPayment">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: FOP V1.0 Fare Calc Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AdditionalCollectionFlag" type="xs:string"/>
                    <xs:attribute name="AmericanExpressPaymentFlag" type="xs:string"/>
                    <xs:attribute name="CardHolderNameOrOther" type="xs:string"/>
                    <xs:attribute name="CreditCardApprovalCode" type="xs:string"/>
                    <xs:attribute name="CreditCardExpiration" type="xs:string"/>
                    <xs:attribute name="CreditCardNumber" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FormOfPayment" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="NonRefundableFlag" type="xs:string"/>
                    <xs:attribute name="PaymentDueFlag" type="xs:string"/>
                    <xs:attribute name="PrepaidTicketAdviceFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="RefundFlag" type="xs:string"/>
                    <xs:attribute name="RemarkNumber" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="FrequentFlyer">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: FREQ V1.0 FF Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AccountNumber" type="xs:string"/>
                    <xs:attribute name="AccountTypeCode" type="xs:string"/>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="FirstName" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastName" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="OsiNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="Status" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="HistoryActionItem">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: HSTITM V1.0 Action Item History</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActionCode" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="HavData" type="xs:string"/>
                    <xs:attribute name="OrdinalNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="HistoryCreditOrSignature">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: HSTSGN V1.0 PNR History Credit Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActionReceivedFromInfo" type="xs:string"/>
                    <xs:attribute name="CreditText" type="xs:string"/>
                    <xs:attribute name="OrdinalNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="HistoryPnrCreation">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: HSTCRE V1.0 PNR Create History Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="CreditText" type="xs:string"/>
                    <xs:attribute name="OrdinalNumber" type="xs:string"/>
                    <xs:attribute name="ReceivedFromInfo" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="OtherServiceInformation">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: OSI V1.0 OSI Other Supp. Info Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="OaCarrierCodeRequestFlag" type="xs:string"/>
                    <xs:attribute name="OsiNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="Passenger">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: NME V1.1 PNR Name Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="CustomerId" type="xs:string"/>
                    <xs:attribute name="FirstName" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastName" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="NonRevenueStandbyFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="Remarks" type="xs:string"/>
                    <xs:attribute name="RevenueStandbyFlag" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="Suffix" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Sr., etc.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="Title" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Mr., Mrs., etc.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="PassengerSpecial">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: NMESPL V1.0 PNR Name Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="GroupId" type="xs:string"/>
                    <xs:attribute name="GroupName" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="NonRevenueStandbyFlag" type="xs:string"/>
                    <xs:attribute name="NumberInGroup" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="RevenueStandbyFlag" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="Phone">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: PHN V1.1 Phone Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AreaCode" type="xs:string"/>
                    <xs:attribute name="CityCode" type="xs:string"/>
                    <xs:attribute name="CountryCode" type="xs:string"/>
                    <xs:attribute name="Extension" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="MarkedForDeletionFlag" type="xs:string"/>
                    <xs:attribute name="Number" type="xs:string"/>
                    <xs:attribute name="PhoneFieldNumber" type="xs:string"/>
                    <xs:attribute name="PhoneRecordNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="Type" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="Pnr" type="y:PnrType"/>
            <xs:element name="Ptc">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: PTC V1.0 Psgr. Type Code Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ApplyToAllFlag" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="PassengerTypeCode" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="RecordLocator">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: RLC V1.4 Record Locator Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActiveLevel" type="xs:string"/>
                    <xs:attribute name="AnyActionBitFlag" type="xs:string"/>
                    <xs:attribute name="AwardPricingPerformedFlag" type="xs:string"/>
                    <xs:attribute name="FilePendingModeFlag" type="xs:string"/>
                    <xs:attribute name="NewBagDataPresent" type="xs:string"/>
                    <xs:attribute name="NewLevelIdForDividedPnr" type="xs:string"/>
                    <xs:attribute name="OutsideSystemRecordLocator" type="xs:string"/>
                    <xs:attribute name="PnrCreationDate" type="xs:string"/>
                    <xs:attribute name="PnrCreationDateWithYear" type="xs:string"/>
                    <xs:attribute name="RecordLocator" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="Remark">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: RMK V1.2 Remark Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="GivenNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="MarkedForDeletionFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="RemarkNumber" type="xs:string"/>
                    <xs:attribute name="RemarkType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>RRMK, SPCL, ADDR.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="UrgentRofMessageFlag" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SeatDl">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: BASSED V1.4 DL Seat Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActiveSegmentFlag" type="xs:string"/>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="ChangeStatusFlag" type="xs:string"/>
                    <xs:attribute name="CompartmentNumber" type="xs:string"/>
                    <xs:attribute name="CompositeFlag" type="xs:string"/>
                    <xs:attribute name="CurrentSeatAssignment" type="xs:string"/>
                    <xs:attribute name="CurrentStatus" type="xs:string"/>
                    <xs:attribute name="DeleteNameFlag" type="xs:string"/>
                    <xs:attribute name="DeletedDueToNameChangeFlag" type="xs:string"/>
                    <xs:attribute name="DeltaIssueBoardingPassOnlyFlag" type="xs:string"/>
                    <xs:attribute name="DepartureDate" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureYear" type="xs:string"/>
                    <xs:attribute name="DeplanedShortFlag" type="xs:string"/>
                    <xs:attribute name="Description" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="HistoryOnlyFlag" type="xs:string"/>
                    <xs:attribute name="InternalFlagForCassReaccomodation" type="xs:string"/>
                    <xs:attribute name="ItineraryCanceledFlag" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="LegNumber" type="xs:string"/>
                    <xs:attribute name="NewSegmentFlag" type="xs:string"/>
                    <xs:attribute name="NumberInParty" type="xs:string"/>
                    <xs:attribute name="OaOrdinalNumber" type="xs:string"/>
                    <xs:attribute name="OaSeatEndTransactionFlag" type="xs:string"/>
                    <xs:attribute name="PartialSmokingFlag" type="xs:string"/>
                    <xs:attribute name="PassengerName" type="xs:string"/>
                    <xs:attribute name="PassengerRequestedFlag" type="xs:string"/>
                    <xs:attribute name="PassengerTicketingStatus" type="xs:string"/>
                    <xs:attribute name="PreviousStatus" type="xs:string"/>
                    <xs:attribute name="PreviouslyCanceledFlag" type="xs:string"/>
                    <xs:attribute name="ReaccomodationFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SaleOfDxaSpaceFlag" type="xs:string"/>
                    <xs:attribute name="SeatDeparturePoint" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SegmentType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>This will always be 9 for DL seat.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="StandByFlag" type="xs:string"/>
                    <xs:attribute name="UnaccomodatedOrChangedFlag" type="xs:string"/>
                    <xs:attribute name="UnclaimedFlag" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SeatOa">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: BASSEO V1.4 OA Seat Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActiveFlag" type="xs:string"/>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="ChangeStatusFlag" type="xs:string"/>
                    <xs:attribute name="CompartmentNumber" type="xs:string"/>
                    <xs:attribute name="CurrentAssignment" type="xs:string"/>
                    <xs:attribute name="CurrentStatus" type="xs:string"/>
                    <xs:attribute name="DeleteNameFlag" type="xs:string"/>
                    <xs:attribute name="DeletedDueToNameChangeFlag" type="xs:string"/>
                    <xs:attribute name="DepartureDate" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureYear" type="xs:string"/>
                    <xs:attribute name="DeplanedShortFlag" type="xs:string"/>
                    <xs:attribute name="Description" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="HistoryOnlyFlag" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="LegNumber" type="xs:string"/>
                    <xs:attribute name="NewFlag" type="xs:string"/>
                    <xs:attribute name="NumberInParty" type="xs:string"/>
                    <xs:attribute name="ParitialSmokingFlag" type="xs:string"/>
                    <xs:attribute name="PassengerName" type="xs:string"/>
                    <xs:attribute name="PassengerRequestedFlag" type="xs:string"/>
                    <xs:attribute name="PassengerTicketingStatus" type="xs:string"/>
                    <xs:attribute name="PreferredFlag" type="xs:string"/>
                    <xs:attribute name="PreviousAssignment" type="xs:string"/>
                    <xs:attribute name="PreviousStatus" type="xs:string"/>
                    <xs:attribute name="ReaccomodationFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SaleOfDxaSpaceFlag" type="xs:string"/>
                    <xs:attribute name="SeatDeparturePoint" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SegmentType" type="xs:string"/>
                    <xs:attribute name="StandbyFlag" type="xs:string"/>
                    <xs:attribute name="ThroughCheckinFlag" type="xs:string"/>
                    <xs:attribute name="TypeOfRequestFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Specific or Generic.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="UnclaimedFlag" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SegmentAdditionalInfo">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: DAI V1.2 Additional Itin Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AccumulatedTime" type="xs:string"/>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="ArrivalTime" type="xs:string"/>
                    <xs:attribute name="CassEquipment" type="xs:string"/>
                    <xs:attribute name="ConnectionCarrierType" type="xs:string"/>
                    <xs:attribute name="DeltaFlightType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>C=DL Connection Carrier, D=Delta mainline, L=Song, X=Delta Express,T=Test.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="DepartureDayOfWeekNumber" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureTime" type="xs:string"/>
                    <xs:attribute name="ElapsedTime" type="xs:string"/>
                    <xs:attribute name="FirstLegDepartureCity" type="xs:string"/>
                    <xs:attribute name="FirstLegDepartureDate" type="xs:string"/>
                    <xs:attribute name="FirstLegDepartureTime" type="xs:string"/>
                    <xs:attribute name="FirstLegDepartureYear" type="xs:string"/>
                    <xs:attribute name="FlightAdvisoryText" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>multiple message will be saparated by '-/*'.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="FlightDepartureDate" type="xs:string"/>
                    <xs:attribute name="FlightLegDepartureYear" type="xs:string"/>
                    <xs:attribute name="FlightMileage" type="xs:string"/>
                    <xs:attribute name="InventoryEquipment" type="xs:string"/>
                    <xs:attribute name="LegArrivalDate" type="xs:string"/>
                    <xs:attribute name="LegNumber" type="xs:string"/>
                    <xs:attribute name="MealServiceCode" type="xs:string"/>
                    <xs:attribute name="NoCommsLinkFlag" type="xs:string"/>
                    <xs:attribute name="OfficialAirlineGuideEquipmentCode" type="xs:string"/>
                    <xs:attribute name="OperatingCarrierCode" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SegmentDl">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: BASDLV2.2 DL Itinerary Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActiveFlag" type="xs:string"/>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="ArrivalTime" type="xs:string"/>
                    <xs:attribute name="AscMessageFlag" type="xs:string"/>
                    <xs:attribute name="AtlanticExcellenceRevenueValue" type="xs:string"/>
                    <xs:attribute name="BackupCheckinSystemActiveThisFlightFlag" type="xs:string"/>
                    <xs:attribute name="BinaryFareTypeCode" type="xs:string"/>
                    <xs:attribute name="BlockSpaceControlFlag" type="xs:string"/>
                    <xs:attribute name="CancelFlag" type="xs:string"/>
                    <xs:attribute name="ChangeStatusFlag" type="xs:string"/>
                    <xs:attribute name="ClassOfService" type="xs:string"/>
                    <xs:attribute name="ClassOfServiceOverBookedFlag" type="xs:string"/>
                    <xs:attribute name="CodeShareClassOfService" type="xs:string"/>
                    <xs:attribute name="CodeShareParticipantFlag" type="xs:string"/>
                    <xs:attribute name="CompartmentNumber" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>1=First, 2=Business, 3=Coach, 5=Codeshare operated premium (W) class.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="CompartmentOverBookedFlag" type="xs:string"/>
                    <xs:attribute name="ConditionalCancelAndSellFlag" type="xs:string"/>
                    <xs:attribute name="ConsideredForMscSelectTicketFlag" type="xs:string"/>
                    <xs:attribute name="ContinuingFlag" type="xs:string"/>
                    <xs:attribute name="CurrentActionCode" type="xs:string"/>
                    <xs:attribute name="DeltaConnectionCarrierFlag" type="xs:string"/>
                    <xs:attribute name="DepartureDate" type="xs:string"/>
                    <xs:attribute name="DepartureDateAdjustment" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Absolute value.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="DepartureDateAdjustmentNegativeFlag" type="xs:string"/>
                    <xs:attribute name="DepartureDayOfWeekNumber" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureTime" type="xs:string"/>
                    <xs:attribute name="DirectConnectReconcilePseudoAaaFlag" type="xs:string"/>
                    <xs:attribute name="DlPassengerOnDlMarketedCodeshareFlag" type="xs:string"/>
                    <xs:attribute name="DynamicAdlInEffectFlag" type="xs:string"/>
                    <xs:attribute name="ElectronicTicketChangedToPaFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=ET changed action code to PA</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ElectronicTicketChangedToPbFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=ET changed action code to PB</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ElectronicTicketChangedToPcFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=ET changed action code to PC</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ElectronicTicketEligibleFlag" type="xs:string"/>
                    <xs:attribute name="EquipmentChangeFlag" type="xs:string"/>
                    <xs:attribute name="ErrorWithDateConversionFlag" type="xs:string"/>
                    <xs:attribute name="FFlyerLevelAtBookingTimeFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>M=FO, G=GM, P=PM</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="FirstIndexableFlag" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="GrossInventoryFlag" type="xs:string"/>
                    <xs:attribute name="InFlightDateAdjustment" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Absolute value.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="InboundConnectionFlag" type="xs:string"/>
                    <xs:attribute name="InboundOutboundChangeFlag" type="xs:string"/>
                    <xs:attribute name="InflightDateAdjustmentNegativeFlag" type="xs:string"/>
                    <xs:attribute name="IprsBit1" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>1=IROP.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="IprsBit2" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>1=IROP protection segment.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="IprsBit3" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="LegNumber" type="xs:string"/>
                    <xs:attribute name="MarriedControl" type="xs:string"/>
                    <xs:attribute name="MarriedControlAvilBucket" type="xs:string"/>
                    <xs:attribute name="MoreThanOneLegFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=More than one leg.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NWMigrationFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y = it was booked for NW PNR
migration.
N = it was NOT booked for migration.
NOTE: this indicator is temporary and will be given back in Jan 2011.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NewFlag" type="xs:string"/>
                    <xs:attribute name="NewIropFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Not related to IPRS.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NoSmokingFlag" type="xs:string"/>
                    <xs:attribute name="NonDemandFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=Non-demand, N=demand.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NonInventoryFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=non-inventory</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NonRevenueFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=NonRevenue, N=Revenue.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="NumberInParty" type="xs:string"/>
                    <xs:attribute name="OaPassengerOnDlOperatedCodeshareByDlAgentFlag" type="xs:string"/>
                    <xs:attribute name="OaPassengerOnDlOperatedCodeshareFlag" type="xs:string"/>
                    <xs:attribute name="OandDTripNumber" type="xs:string"/>
                    <xs:attribute name="OutboundConnectionFlag" type="xs:string"/>
                    <xs:attribute name="PartOfWorldspanTripFlag" type="xs:string"/>
                    <xs:attribute name="PartialSmokingFlag" type="xs:string"/>
                    <xs:attribute name="PnrNeedsQueuingFlag" type="xs:string"/>
                    <xs:attribute name="PoolAllocationFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y = it has been booked from pool allocation. 
N = segment was NOT booked from pool allocation.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="PreviousActionCode" type="xs:string"/>
                    <xs:attribute name="PseudoTripNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="ReduceNumberInPartyFlag" type="xs:string"/>
                    <xs:attribute name="RmsFareValue" type="xs:string"/>
                    <xs:attribute name="ScheduleChangeFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y = it has been affected by schedule change.
N = NOT affected by schedule change.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="ScheduleChangeRestartFlag" type="xs:string"/>
                    <xs:attribute name="SegmentDepartureYear" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SegmentType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>0 for DL.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="SpaceSoldFromInventoryThisTransaction" type="xs:string"/>
                    <xs:attribute name="StandbyListFlag" type="xs:string"/>
                    <xs:attribute name="UniqueBasId" type="xs:string"/>
                    <xs:attribute name="VitualInvBuckets" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SegmentOa">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: BASOA V1.5 OA Itin Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ActiveFlag" type="xs:string"/>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="ArrivalTime" type="xs:string"/>
                    <xs:attribute name="CancelFlag" type="xs:string"/>
                    <xs:attribute name="ChangeStatusFlag" type="xs:string"/>
                    <xs:attribute name="ClassOfService" type="xs:string"/>
                    <xs:attribute name="CodeshareParticipantFlag" type="xs:string"/>
                    <xs:attribute name="ContinuingItineraryFlag" type="xs:string"/>
                    <xs:attribute name="CurrentActionCode" type="xs:string"/>
                    <xs:attribute name="DepartureDate" type="xs:string"/>
                    <xs:attribute name="DepartureDateAdjustment" type="xs:string"/>
                    <xs:attribute name="DepartureDayOfTheWeekNumber" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="DepartureTime" type="xs:string"/>
                    <xs:attribute name="ElectronicTicketEligibleFlag" type="xs:string"/>
                    <xs:attribute name="ErrorWithDateConversionFlag" type="xs:string"/>
                    <xs:attribute name="FirstIndexableFlag" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="InFlightDateAdjustment" type="xs:string"/>
                    <xs:attribute name="InflightDateAdjustmentNegativeFlag" type="xs:string"/>
                    <xs:attribute name="IprsBit1" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>1=IROP segment.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="IprsBit2" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>1=IROP protection segment.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="IprsBit3" type="xs:string"/>
                    <xs:attribute name="IprsBit4" type="xs:string"/>
                    <xs:attribute name="ItinOAndDTripNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="LegNumber" type="xs:string"/>
                    <xs:attribute name="NegativeDepartureDateAdjustmentFlag" type="xs:string"/>
                    <xs:attribute name="NewFlag" type="xs:string"/>
                    <xs:attribute name="NoSmokingFlag" type="xs:string"/>
                    <xs:attribute name="NumberInParty" type="xs:string"/>
                    <xs:attribute name="OaAgentSine" type="xs:string"/>
                    <xs:attribute name="OaConfirmationFlag" type="xs:string"/>
                    <xs:attribute name="OaInboundConnectionFlag" type="xs:string"/>
                    <xs:attribute name="OaInboundOutboundChangeFlag" type="xs:string"/>
                    <xs:attribute name="OaOutboundConnectionFlag" type="xs:string"/>
                    <xs:attribute name="OaPniFlag" type="xs:string"/>
                    <xs:attribute name="OaSharedFlag" type="xs:string"/>
                    <xs:attribute name="OnRequestDueToNoAvailability" type="xs:string"/>
                    <xs:attribute name="PartialSmokingFlag" type="xs:string"/>
                    <xs:attribute name="PreviousActionCode" type="xs:string"/>
                    <xs:attribute name="PseudoTripNumSetByTripAnalyzer" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="ReduceNumberInPartyFlag" type="xs:string"/>
                    <xs:attribute name="SegmentDepartureYear" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SegmentType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>2=DL</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="SoldFromOaDirectAccessDisplayFlag" type="xs:string"/>
                    <xs:attribute name="ThirdAirlineRequest" type="xs:string"/>
                    <xs:attribute name="WorldspanPartnerPriorityWaitlist" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="SpecialServiceRequest">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: SSR V1.2 Special Service Rqst Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AirlineCode" type="xs:string"/>
                    <xs:attribute name="AllPassengersFlag" type="xs:string"/>
                    <xs:attribute name="AllSegmentsFlag" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FlightDate" type="xs:string"/>
                    <xs:attribute name="FlightNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="NumberOfSsrsRequestedFor" type="xs:string"/>
                    <xs:attribute name="OaSpecialServiceRequestFlag" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="Remarks" type="xs:string"/>
                    <xs:attribute name="RequestCode" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="SsrNumber" type="xs:string"/>
                    <xs:attribute name="StatusCode" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="StoredFareData">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: FQC V1.1 $D Stored Fare Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FareRemarks" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>specifically for CMS</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketCouponInfo">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: TICOU V1.1 Ticket Display Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ArrivalPoint" type="xs:string"/>
                    <xs:attribute name="CheckDigit" type="xs:string"/>
                    <xs:attribute name="ConnectionTicketNumber" type="xs:string"/>
                    <xs:attribute name="CouponNumber" type="xs:string"/>
                    <xs:attribute name="CouponStatus" type="xs:string"/>
                    <xs:attribute name="DeparturePoint" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="TicketNumber" type="xs:string"/>
                    <xs:attribute name="TravelDate" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketData">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: D5CB V1.2 Ticket Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AccountControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="AutoReissueFlag" type="xs:string"/>
                    <xs:attribute name="BoardingPassControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="CityCodeForAccountingPrinter" type="xs:string"/>
                    <xs:attribute name="CityCodeForTicketPrinter" type="xs:string"/>
                    <xs:attribute name="ConnTicketNumber" type="xs:string"/>
                    <xs:attribute name="ControlNumberExhausedFlag2" type="xs:string"/>
                    <xs:attribute name="ControlNumberExhaustedFlag" type="xs:string"/>
                    <xs:attribute name="DateOfBoardingPassIssue" type="xs:string"/>
                    <xs:attribute name="DateOfInvoice" type="xs:string"/>
                    <xs:attribute name="DeleteItemFlag" type="xs:string"/>
                    <xs:attribute name="DigitCheck" type="xs:string"/>
                    <xs:attribute name="ElectronicTicketNumberFlag" type="xs:string"/>
                    <xs:attribute name="ExchangedTicketFlag" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FirstScnAcctDocRangeA" type="xs:string"/>
                    <xs:attribute name="FirstScnAcctDocRangeB" type="xs:string"/>
                    <xs:attribute name="FirstScnBoardRangeA" type="xs:string"/>
                    <xs:attribute name="FirstScnBoardRangeB" type="xs:string"/>
                    <xs:attribute name="FirstScnTicketRangeA" type="xs:string"/>
                    <xs:attribute name="FirstScnTicketRangeB" type="xs:string"/>
                    <xs:attribute name="InvoiceNumber" type="xs:string"/>
                    <xs:attribute name="InvoiceNumberFlag" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="LastScnAcctDocRangeA" type="xs:string"/>
                    <xs:attribute name="LastScnAcctDocRangeB" type="xs:string"/>
                    <xs:attribute name="LastScnBoardRangeA" type="xs:string"/>
                    <xs:attribute name="LastScnBoardRangeB" type="xs:string"/>
                    <xs:attribute name="LastScnTicketRangeA" type="xs:string"/>
                    <xs:attribute name="LastScnTicketRangeB" type="xs:string"/>
                    <xs:attribute name="ManualAccountControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="ManualBoardingPassControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="ManualReissueFlag" type="xs:string"/>
                    <xs:attribute name="ManualTicketControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="ManualTicketFlag" type="xs:string"/>
                    <xs:attribute name="NoBoardingPassFlag" type="xs:string"/>
                    <xs:attribute name="PassengerName" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="TicketControlNumberFlag" type="xs:string"/>
                    <xs:attribute name="TicketIssueDate" type="xs:string"/>
                    <xs:attribute name="TicketMessage" type="xs:string"/>
                    <xs:attribute name="TicketNumber" type="xs:string"/>
                    <xs:attribute name="TicketNumberFlag" type="xs:string"/>
                    <xs:attribute name="TicketType" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketInformation">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: TITDI V1.0 Ticket Display Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ConnectionTicketNumber" type="xs:string"/>
                    <xs:attribute name="DigitCheck" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="IssueDate" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="TicketName" type="xs:string"/>
                    <xs:attribute name="TicketNumber" type="xs:string"/>
                    <xs:attribute name="TicketStatus" type="xs:string"/>
                    <xs:attribute name="TicketType1" type="xs:string"/>
                    <xs:attribute name="TicketType2" type="xs:string"/>
                    <xs:attribute name="TypeDescription" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketNumberData1">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: D5E001 V1.1 Ticket Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="AdditionalCollectionAmount" type="xs:string"/>
                    <xs:attribute name="AdditionalCollectionDataFlag" type="xs:string"/>
                    <xs:attribute name="AutoReissueForFormOfPaymentFlag" type="xs:string"/>
                    <xs:attribute name="CommissionRate" type="xs:string"/>
                    <xs:attribute name="CurrencyCode" type="xs:string"/>
                    <xs:attribute name="ExchangedCurrencyAmount" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FirstTimeIssueForFormOfPaymentFlag" type="xs:string"/>
                    <xs:attribute name="IataNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="ManualTicketValue" type="xs:string"/>
                    <xs:attribute name="OriginalFormOfPayment" type="xs:string"/>
                    <xs:attribute name="OriginalSalesLocation" type="xs:string"/>
                    <xs:attribute name="OriginalTicketAgent" type="xs:string"/>
                    <xs:attribute name="OriginalTicketCity" type="xs:string"/>
                    <xs:attribute name="OriginalTicketDate" type="xs:string"/>
                    <xs:attribute name="OriginalTicketNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="RefundDataFlag" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="TotalExchangedAmount" type="xs:string"/>
                    <xs:attribute name="UsedYTicketRedemptionFlag" type="xs:string"/>
                    <xs:attribute name="VoluntaryFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>0=Voluntary, 1=Involuntary.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketNumberData2">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: D5E002 V1.0 Ticket Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ExchangeCouponNumber" type="xs:string"/>
                    <xs:attribute name="ExchangeDocumentNumber" type="xs:string"/>
                    <xs:attribute name="ExchangeTicketAmount" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketNumberData3">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: D5E003 V1.1 Ticket Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="ApprovalCode" type="xs:string"/>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FormOfPayment" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="Tariff" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketPassengerInfo">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: TIPNI V1.0 Ticket Display Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="PassengerName" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="TicketMessage" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketingField">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: TKT V1.0 Ticketing Field Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                    <xs:attribute name="TicketingTypeCode" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>TA=Tkt Appt, TM=TBM.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketingInstruction">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: TKI V1.1 Ticketing Instruction Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FarefaxGeneratedFlag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Y=This TKI would be displayed in response to a *TKE input when an 'ADDL' TKI is present in the Pnr.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="TicketingTimeLimit">
                <xs:annotation>
                    <xs:documentation>Phat-R Workbook: LMT V1.0 Tktg Time Limit Data</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="FirstNameNumber" type="xs:string"/>
                    <xs:attribute name="FreeformText" type="xs:string"/>
                    <xs:attribute name="LastNameNumber" type="xs:string"/>
                    <xs:attribute name="RecordName" type="xs:string"/>
                    <xs:attribute name="SegmentNumber" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/eticket" xmlns:leg="http://schemas.delta.com/ecredit/legdetails" targetNamespace="http://schemas.delta.com/ecredit/eticket" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/ecredit/legdetails"/>
            <xs:complexType name="ETicketType">
                <xs:sequence>
                    <xs:element ref="leg:LegDetails" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="AltCurrencyCode" type="xs:string"/>
                <xs:attribute name="AltPartialValue" type="xs:string"/>
                <xs:attribute name="AltPenaltyValue" type="xs:string"/>
                <xs:attribute name="AltUsableValue" type="xs:string"/>
                <xs:attribute name="CurrencyCode" type="xs:string"/>
                <xs:attribute name="LastConjDocNumber" type="xs:string"/>
                <xs:attribute name="NumConjuctive" type="xs:string"/>
                <xs:attribute name="PartialUse" type="xs:string"/>
                <xs:attribute name="Partialvalue" type="xs:string"/>
                <xs:attribute name="PenaltyValue" type="xs:string"/>
                <xs:attribute name="UsableValue" type="xs:string"/>
            </xs:complexType>
            <xs:element name="ETicket" type="tns:ETicketType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/requestinfo/v3" targetNamespace="http://schemas.delta.com/common/requestinfo/v3" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="RequestInfoType">
                <xs:attribute name="AppChannelName" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					The name of the channel from which the request is
					originating, e.g. kiosk, delta.com, etc.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ApplicationId" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Each client should have a unique identifier. This is
					defined by Worldspan.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ApplicationVersion" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Logged for debugging and possibly used for routing.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Company" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Logged for debugging and possibly used for routing.
					For DT, it would all be Delta.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="DebugOptions" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					If not empty, debug information will be included in
					the response. The debug information will include,
					among other things, the actual request/response
					sent/received from the data sources used in the
					service and the current configuration settings.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					The description of the transaction or session. This
					is also provided by the client and is used in
					instrumentation logging and reporting.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ExternalVendorFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Default is N. This flag needs to be set to 'Y' if
					the request is for external Vendor.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Location" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Logged for debugging and possibly used for routing.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SessionId" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					The session cookie that was provided by the
					Session.Create service.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="TestLab" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					Use this parameter if the request need to be routed
					to a particular test lab (TSAJ..TSAT..ETC). This
					should be used only for debugging puposes while the
					default lab is not available. This parameter should
					never be used in Production Environment.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="TransactionId" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
					The unique transaction id for this session. This
					must be created and provided by the client and is
					used in instrumentation logging and reporting.
				</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="RequestInfo" type="y:RequestInfoType"/>
        </xs:schema>
        <schema xmlns:tns="http://schemas.delta.com/common/requestinfo/v4" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.delta.com/common/requestinfo/v4" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="DBConnectionInfoType">
                <annotation>
                    <documentation/>
                </annotation>
                <attribute name="BedsDBDnsNameId" type="string">
                    <annotation>
                        <documentation>
    				An id to match the client with a particular dns for
    				BEDS
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="TestBedsDBId" type="string">
                    <annotation>
                        <documentation>
    				A predefined BookingEDS (BEDS) database instance id
    			</documentation>
                    </annotation>
                </attribute>
                <attribute name="TestFpesDBId" type="string">
                    <annotation>
                        <documentation>
    				A predefined FPES database instance id
    			</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <complexType name="HostContextParamsType">
                <attribute name="Airline" type="string">
                    <annotation>
                        <documentation>
					Airline Code

				</documentation>
                    </annotation>
                </attribute>
                <attribute name="City" type="string">
                    <annotation>
                        <documentation>
					Specifies the City Code that is to be used; this has
					implications as to which commands can be executed on
					specific records.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="DutyCode" type="string"/>
                <attribute name="LogonId" type="string">
                    <annotation>
                        <documentation>
					If the session is to be created using an
					individual's logon, this specifies the LogonId to be
					utilized for this session. This can have various
					implications including what commands can be
					executed, etc.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="Password" type="string">
                    <annotation>
                        <documentation>
					Password for the LogonId provided (if any)
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="PoolType" type="string">
                    <annotation>
                        <documentation> 
					Indicates PoolName or a client's logged-in wsine
					for which session is being 
					requested. If a client's logged-in wsine is being
					used, info in the format,  ;wsine=xxxxxx  should
					be passed in for all operations that create or destroy a session.
					If a client's logged-in wsine is being used AND this wsine needs
					to be logged off during destroy, info in the format,  ;wsine=xxxxxx;logoff=Y/N  should
					be passed in for all operations that create or destroy a session.
					xxxxx is the wsine and logoff=Y would imply that 
					during destroy the client's wsine will be logged off.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ResetPassword" type="string">
                    <annotation>
                        <documentation>
					ResetPassword is required if the password is to be
					changed with this request. If this is present,
					password for the LogonId should be changed to the
					password requested. Don't ask why it is even here!
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TimeoutInactivity" type="string">
                    <annotation>
                        <documentation>
					Specify the timeout in seconds for the requested
					session if the session is inactive for the duration
					specified. This should be based on the type of
					transaction the session is about to handle.
					Inactivity timeout should be less than the
					TimeoutSession. This should be an int with a range
					from 0000 - 9998.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TimeoutSession" type="string">
                    <annotation>
                        <documentation>
					Specify the timeout in seconds for the requested
					session. This should be based on the type of
					transaction the session is about to handle. The
					session will be terminated when this is reached even
					if there is activity against the session. This
					should be an int with a range from 0000 - 9999.
				</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <complexType name="RequestInfoType">
                <sequence>
                    <element ref="tns:HostContextParams" minOccurs="0"/>
                    <element ref="tns:DBConnectionInfo" minOccurs="0"/>
                </sequence>
                <attribute name="AppChannelName" type="string">
                    <annotation>
                        <documentation>
					The name of the channel from which the request is
					originating, e.g. kiosk, delta.com, etc.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ApplicationId" type="string">
                    <annotation>
                        <documentation>
					Each client should have a unique identifier. This is
					defined by Worldspan.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ApplicationVersion" type="string">
                    <annotation>
                        <documentation>
					Logged for debugging and possibly used for routing.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="Company" type="string">
                    <annotation>
                        <documentation>
					Logged for debugging and possibly used for routing.
					For DT, it would all be Delta.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="DebugOptions" type="string">
                    <annotation>
                        <documentation>
					If not empty, debug information will be included in
					the response. The debug information will include,
					among other things, the actual request/response
					sent/received from the data sources used in the
					service and the current configuration settings.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="Description" type="string">
                    <annotation>
                        <documentation>
					The description of the transaction or session. This
					is also provided by the client and is used in
					instrumentation logging and reporting.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="ExternalVendorFlag" type="string">
                    <annotation>
                        <documentation>
					Default is N. This flag needs to be set to 'Y' if
					the request is for external Vendor.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="Location" type="string">
                    <annotation>
                        <documentation>
					Logged for debugging and possibly used for routing.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="SessionId" type="string">
                    <annotation>
                        <documentation>
					The session cookie that was provided by the
					Session.Create service.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TestLab" type="string">
                    <annotation>
                        <documentation>
					Use this parameter if the request need to be routed
					to a particular test lab (TSAJ..TSAT..ETC). This
					should be used only for debugging puposes while the
					default lab is not available. This parameter should
					never be used in Production Environment.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TransactionId" type="string">
                    <annotation>
                        <documentation>
					The unique transaction id for this session. This
					must be created and provided by the client and is
					used in instrumentation logging and reporting.
				</documentation>
                    </annotation>
                </attribute>
                <attribute name="TurnOffResponseInfo" type="string">
                    <annotation>
                        <documentation>By default, all operation responses may return ResponseInfo elements. Set this to "Y" to not get back any ResponseInfo elements in the response.		</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="DBConnectionInfo" type="tns:DBConnectionInfoType"/>
            <element name="HostContextParams" type="tns:HostContextParamsType"/>
            <element name="RequestInfo" type="tns:RequestInfoType"/>
        </schema>
        <xsd:schema xmlns:y="http://schemas.delta.com/common/checkhealth/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.delta.com/common/checkhealth/v3" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="CheckHealthGenericRequestType">
                <xsd:annotation>
                    <xsd:documentation>
				RequestType that will accept a string. If the check
				health function does not require any special inputs, use
				this request type.
			</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="AnyString" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="CheckHealthResponseType">
                <xsd:annotation>
                    <xsd:documentation>
				ResponseType represents the status of the entire service
				as well as information on the dependencies of the
				service. For example, if a service retrieves information
				from the database, the response will contain an status
				entry for the service as well as the database.
			</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="ServiceHealthStatus" type="y:HealthStatusType">
                        <xsd:annotation>
                            <xsd:documentation>
						Health of the entire service; the result value
						is determined per the need and dependencies of
						the service. In this scenario, if a critical
						dependency failed, then the ServiceHealthStatus
						would be FATAL...if it is a minor piece that is
						broken/down, then the service is still ok. It is
						the provider of the service that determines this
						result; there is no hard rule.
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="HealthMessage" type="y:HealthMessageType" minOccurs="0" maxOccurs="unbounded">
                        <xsd:annotation>
                            <xsd:documentation>
                		Health of one or more dependencies.
                	</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="HealthMessageType">
                <xsd:annotation>
                    <xsd:documentation>
				HealthMessage providing health status information on
				each of the dependencies of the service. For example, a
				database, another service, file system, email server,
				etc.
			</xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element name="SystemName" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
						System or Dependency name- for example,
						SkyMilesAuthenticationService or CustomerDB,
						even D007PROD
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Message" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
						Message regarding the problem or the status
						provided
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Status" type="y:HealthStatusType">
                        <xsd:annotation>
                            <xsd:documentation>
						Status of the system/dependency
					</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:simpleType name="HealthStatusType">
                <xsd:annotation>
                    <xsd:documentation>
        		HealthStatus provides an indication as to the health
        	</xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="FATAL">
                        <xsd:annotation>
                            <xsd:documentation>FATAL : cannot achieve desired goals which are considered critical by the provider</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="WARN">
                        <xsd:annotation>
                            <xsd:documentation>WARN : certain pieces of the service may not be functioning properly, but the overall goals of the provider is still achieved</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="OK">
                        <xsd:annotation>
                            <xsd:documentation>OK : no problems of any kind were detected</xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="CheckHealthRequest" type="y:CheckHealthGenericRequestType"/>
            <xsd:element name="CheckHealthResponse" type="y:CheckHealthResponseType"/>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditsearchresponse" xmlns:ect="http://schemas.delta.com/misc/ecertificateresponse" xmlns:crit="http://schemas.delta.com/ecredit/ecreditsearchcriteria" xmlns:pref2="http://schemas.delta.com/common/responseinfo/v1" xmlns:dbg="http://schemas.delta.com/common/debuginfo/v4" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/ecredit/ecreditsearchresponse" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xs:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xs:import namespace="http://schemas.delta.com/ecredit/ecreditsearchcriteria"/>
            <xs:import namespace="http://schemas.delta.com/misc/ecertificateresponse"/>
            <xs:complexType name="ECreditSearchResponseType">
                <xs:sequence>
                    <xs:element ref="err:Error" minOccurs="0"/>
                    <xs:element ref="dbg:DebugInfo"/>
                    <xs:element ref="pref2:ResponseInfo"/>
                    <xs:element ref="crit:ECreditSearchCriteria" minOccurs="0"/>
                    <xs:element ref="ect:RetrieveECertificateResponse" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="ECertCount" type="xs:string"/>
                <xs:attribute name="ECreditCount" type="xs:string"/>
                <xs:attribute name="OpenCertsOrECreditsExist" type="xs:string"/>
                <xs:attribute name="RecentExpiredECertCount" type="xs:string"/>
                <xs:attribute name="RecentExpiredECreditCount" type="xs:string"/>
            </xs:complexType>
            <xs:element name="ECreditSearchResponse" type="tns:ECreditSearchResponseType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/legdetails" targetNamespace="http://schemas.delta.com/ecredit/legdetails" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="LegDetailsType">
                <xs:attribute name="Arr" type="xs:string"/>
                <xs:attribute name="CpnNumber" type="xs:string"/>
                <xs:attribute name="Dept" type="xs:string"/>
                <xs:attribute name="DeptDay" type="xs:string"/>
                <xs:attribute name="DeptMonth" type="xs:string"/>
                <xs:attribute name="DeptYear" type="xs:string"/>
                <xs:attribute name="Status" type="xs:string"/>
            </xs:complexType>
            <xs:element name="LegDetails" type="tns:LegDetailsType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://soa.delta.com/miscellaneousdocument/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/fault/v4"/>
            <xs:import namespace="http://schemas.delta.com/common/checkhealth/v3"/>
            <xs:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xs:import namespace="http://schemas.delta.com/common/requestinfo/v3"/>
            <xs:import namespace="http://schemas.delta.com/common/debuginfo/v3"/>
            <xs:import namespace="http://schemas.delta.com/common/baserequestinfo/v2"/>
            <xs:import namespace="http://schemas.delta.com/common/baseresponseinfo/v2"/>
            <xs:import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <xs:import namespace="http://schemas.delta.com/common/fault/v3"/>
            <xs:import namespace="http://schemas.delta.com/miscellaneousdoctypes/v2"/>
            <xs:import namespace="http://schemas.delta.com/miscellaneousdocrequesttypes/v2"/>
            <xs:import namespace="http://schemas.delta.com/miscellaneousdoctypes/maintain/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/creditvoucher/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/creditvoucher/v2"/>
            <xs:import namespace="http://schemas.delta.com/common/virtualcreditcardvoucher/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/requestoption/v1"/>
            <xs:import namespace="http://schemas.delta.com/unaccompaniedmirortypes/v1"/>
            <xs:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xs:import namespace="http://schemas.delta.com/ecredit/ecreditsearchrequest"/>
            <xs:import namespace="http://schemas.delta.com/ecredit/ecreditsearchresponse"/>
            <xs:complexType name="BusinessFaultType">
                <xs:sequence>
                    <xs:element ref="ns24:FaultDetailedInfo" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CertificateUsagesType">
                <xs:attribute name="EBusinessFunctionStartLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2005-11-22 12:06:34)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ECertificateDocumentIdentifier" type="xs:string"/>
                <xs:attribute name="RecordLocatorIdentifier" type="xs:string"/>
                <xs:attribute name="TicketDocumentNumber" type="xs:string"/>
                <xs:attribute name="WorldPerksNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							SkyMilesNumber
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="CompartmentCodesType">
                <xs:attribute name="CarrierCode" type="xs:string"/>
                <xs:attribute name="CompartmentCode" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="CreateENCIRequestType">
                <xs:sequence>
                    <xs:element name="RequestOptions" type="tns:RequestOptionsType"/>
                    <xs:element name="PassengerInfo" type="tns:PassengerInfoType" maxOccurs="unbounded"/>
                    <xs:element ref="ns37:RequestInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateENCIResponseType">
                <xs:sequence>
                    <xs:element ref="ns32:DebugInfo" minOccurs="0"/>
                    <xs:element name="ResponseData" type="tns:ResponseDataType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns5:Error" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateETCVRequestType">
                <xs:sequence>
                    <xs:element ref="ns37:RequestInfo"/>
                    <xs:element ref="ns12:TransportationCreditVoucher" minOccurs="0"/>
                    <xs:element ref="ns48:VirtualCreditCardVoucher" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateETCVResponseType">
                <xs:sequence>
                    <xs:element ref="ns32:DebugInfo" minOccurs="0"/>
                    <xs:element ref="ns21:AdvisoryMessage" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CustomerType">
                <xs:attribute name="CreationLocalTimestamp" type="xs:string"/>
                <xs:attribute name="CustomerExternalReferenceNumber" type="xs:string"/>
                <xs:attribute name="CustomerLastName" type="xs:string"/>
                <xs:attribute name="ECertificateCustomerAffiliateIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificateCustomerAffiliateTypeCode" type="xs:string"/>
                <xs:attribute name="ECertificateGroupIdentifier" type="xs:string"/>
                <xs:attribute name="FirstName" type="xs:string"/>
                <xs:attribute name="GlobalCustomerIdentifier" type="xs:string"/>
                <xs:attribute name="MiddleName" type="xs:string"/>
                <xs:attribute name="PostalAreaCode" type="xs:string"/>
                <xs:attribute name="PrefixNameCode" type="xs:string"/>
                <xs:attribute name="SkyMilesNumber" type="xs:string"/>
                <xs:attribute name="SuffixNameCode" type="xs:string"/>
                <xs:attribute name="WorldPerksNumber" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="DaysOfWeekType">
                <xs:attribute name="DayOfWeekName" type="xs:string"/>
                <xs:attribute name="DayOfWeekNumber" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="DebitCreditCardTravelType">
                <xs:attribute name="DebitCreditCardLevelCode" type="xs:string"/>
                <xs:attribute name="DebitCreditCardTravelTypeCode" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="DebitCreditCardsType">
                <xs:attribute name="ECertificateProgramDebitCreditCardTypeCode" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="ECertRequestOptionsType">
                <xs:attribute name="CustomerAffiliateIdentifier" type="xs:string"/>
                <xs:attribute name="CustomerAffiliateTypeCode" type="xs:string"/>
                <xs:attribute name="DocumentNumber" type="xs:string"/>
                <xs:attribute name="FrequentFlyerNumber" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="ECertificateRequestType">
                <xs:annotation>
                    <xs:documentation>
						ECertificate Input params are any one of the following sets.
						1. RequestByDocumentNumber - max 20 numbers
						2. SkyMilesNumber or WorldPerksNumber (only 1)
						3. SkyMilesNumber or WorldPerksNumber (only 1) or  RequestByDocumentNumber - max 20 numbers
						4. CustomerAffplicationId and CustomerAfflicationTypeCode (only 1)
						5. CustomerAffplicationId and CustomerAfflicationTypeCode or RequestByDocumentNumber - max 20 numbers
					</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="RequestByDocumentNumber" type="tns:RequestByDocumentNumberType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="CustomerAffiliateIdentifier" type="xs:string"/>
                <xs:attribute name="CustomerAffiliateTypeCode" type="xs:string"/>
                <xs:attribute name="FrequentFlyerNumber" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="ECertificateResponseType">
                <xs:sequence>
                    <xs:element name="ECertRequestOptions" type="tns:ECertRequestOptionsType"/>
                    <xs:element name="EcertDocument" type="tns:EcertDocumentType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="FreeformText" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="EcertDocumentType">
                <xs:sequence>
                    <xs:element name="Customer" type="tns:CustomerType" minOccurs="0"/>
                    <xs:element name="Promotions" type="tns:PromotionsType" minOccurs="0"/>
                    <xs:element name="CertificateUsages" type="tns:CertificateUsagesType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="CustomerSupportAgentNumber" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentCreationLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ECertificateDocumentIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentRedemptionLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ECertificateDocumentUpdateLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ECertificateDocumentUsageCount" type="xs:string"/>
                <xs:attribute name="ECertificateGroupIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificateRedemptionCode" type="xs:string"/>
                <xs:attribute name="GlobalCustomerIdentifier" type="xs:string"/>
                <xs:attribute name="LastUpdateLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="WithholdECertificateDocumentIndicator" type="xs:string"/>
                <xs:attribute name="WorldPerksECertificateDocumentIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="EcertRequestType">
                <xs:sequence>
                    <xs:element name="EcertNumber" type="xs:string"/>
                    <xs:element ref="tns:EcertUsage"/>
                    <xs:element ref="tns:EcertUsageTransaction" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="EcertStatusType">
                <xs:sequence>
                    <xs:element ref="ns5:Error"/>
                    <xs:element name="CertificateUsages" type="tns:CertificateUsagesType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="EcertNumber" type="xs:string"/>
                <xs:attribute name="Status" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="EcertUsageTransactionType">
                <xs:attribute name="SkyMileNumber" type="xs:string"/>
                <xs:attribute name="TicketNumber" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="EcertUsageType">
                <xs:attribute name="BookingTimeStamp" type="xs:string"/>
                <xs:attribute name="RecordLocator" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="PassengerInfoType">
                <xs:attribute name="AgencyNumber" type="xs:string"/>
                <xs:attribute name="AgentLoginID" type="xs:string"/>
                <xs:attribute name="CertificateCurrencyCode" type="xs:string"/>
                <xs:attribute name="CertificateDollarValue" type="xs:string"/>
                <xs:attribute name="CertificateType" use="required" type="xs:string"/>
                <xs:attribute name="DecimalPlaces" type="xs:string"/>
                <xs:attribute name="ExpirationDate" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							7 char DDMMMYY format
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FlightBoardPointCity" type="xs:string"/>
                <xs:attribute name="FlightCarrierCode" type="xs:string"/>
                <xs:attribute name="FlightDepartureDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							7 char DDMMMYY format
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FlightNumber" type="xs:string"/>
                <xs:attribute name="FlightOffPointCity" type="xs:string"/>
                <xs:attribute name="PassengerGivenName" use="required" type="xs:string"/>
                <xs:attribute name="PassengerSurName" use="required" type="xs:string"/>
                <xs:attribute name="ReasonCodeDescription" use="required" type="xs:string"/>
                <xs:attribute name="SequenceNumber" use="required" type="xs:string"/>
                <xs:attribute name="SeriesID" type="xs:string"/>
                <xs:attribute name="SkymileNumber" type="xs:string"/>
                <xs:attribute name="SubTypeCode" use="required" type="xs:string"/>
                <xs:attribute name="TicketDesignatorCode" type="xs:string"/>
                <xs:attribute name="TicketReasonCode" use="required" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="PromotionsType">
                <xs:sequence>
                    <xs:element name="CompartmentCodes" type="tns:CompartmentCodesType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="DaysOfWeek" type="tns:DaysOfWeekType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="DebitCreditCards" type="tns:DebitCreditCardsType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="DebitCreditCardTravel" type="tns:DebitCreditCardTravelType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="TransportationStations" type="tns:TransportationStationsType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="TermsAndConditions" type="tns:TermsAndConditionsType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="AdvancePurchaseRequiredDayCount" type="xs:string"/>
                <xs:attribute name="CreationAgentNumber" type="xs:string"/>
                <xs:attribute name="DistributionAgentNumber" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentActualDistributionLocalDate" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentAgentDistributionLocalDate" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentMaximumUsageCount" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentScheduledDistributionLocalDate" type="xs:string"/>
                <xs:attribute name="ECertificateDocumentTransferIndicator" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionDescription" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionDistributionMethodCode" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionName" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionStatusCode" type="xs:string"/>
                <xs:attribute name="ExcludeMedallionIndicator" type="xs:string"/>
                <xs:attribute name="FareBasisCode" type="xs:string"/>
                <xs:attribute name="GRSLocatorIdentifier" type="xs:string"/>
                <xs:attribute name="GuestSkymilesMembershipRequiredIndicator" type="xs:string"/>
                <xs:attribute name="ImplementationAgentNumber" type="xs:string"/>
                <xs:attribute name="LastUpdateAgentNumber" type="xs:string"/>
                <xs:attribute name="MaximumStayDayCount" type="xs:string"/>
                <xs:attribute name="MinimumStayDayCount" type="xs:string"/>
                <xs:attribute name="MultipleFlightLegRequiredIndicator" type="xs:string"/>
                <xs:attribute name="Non-StopFlightRequiredIndicator" type="xs:string"/>
                <xs:attribute name="PricingAgentNumber" type="xs:string"/>
                <xs:attribute name="PromotionAwardTypeCode" type="xs:string"/>
                <xs:attribute name="PromotionCertificateTypeCode" type="xs:string"/>
                <xs:attribute name="PromotionCreationLocalTimestamp" type="xs:string"/>
                <xs:attribute name="PromotionDeltaExpressIndicator" type="xs:string"/>
                <xs:attribute name="PromotionDeltaShuttleIndicator" type="xs:string"/>
                <xs:attribute name="PromotionDisableIndicator" type="xs:string"/>
                <xs:attribute name="PromotionDiscountQuantity" type="xs:string"/>
                <xs:attribute name="PromotionEffectiveLocalDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PromotionExpirationLocalDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PromotionGuestAllowedCount" type="xs:string"/>
                <xs:attribute name="PromotionImplementationLocalTimestamp" type="xs:string"/>
                <xs:attribute name="PromotionInternetOnlyIndicator" type="xs:string"/>
                <xs:attribute name="PromotionPartnerCarrierIndicator" type="xs:string"/>
                <xs:attribute name="PromotionPricingApprovedLocalTimestamp" type="xs:string"/>
                <xs:attribute name="PromotionTravelEndLocalDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PromotionTravelStartLocalDate" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PromotionUpdateLocalTimestamp" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
							format : yyyy-mm-dd HH:MM:SS (2002-10-31 10:13:30)
						</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PromotionUsageCount" type="xs:string"/>
                <xs:attribute name="RecipientSkymilesMembershipRequiredIndicator" type="xs:string"/>
                <xs:attribute name="RoundTripRequiredIndicator" type="xs:string"/>
                <xs:attribute name="SaturdayNightRequiredIndicator" type="xs:string"/>
                <xs:attribute name="SecureRateAgreementCode" type="xs:string"/>
                <xs:attribute name="SkymilesMemberOnlyIndicator" type="xs:string"/>
                <xs:attribute name="TicketDesignatorCode" type="xs:string"/>
                <xs:attribute name="TicketRefundableIndicator" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="RedeemEcertRequestType">
                <xs:sequence>
                    <xs:element ref="ns38:RequestInfo"/>
                    <xs:element ref="tns:EcertRequest" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RedeemEcertResponseType">
                <xs:sequence>
                    <xs:element ref="tns:EcertStatus" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RequestByDocumentNumberType">
                <xs:attribute name="DocumentNumber" use="required" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="RequestOptionsType">
                <xs:attribute name="ENCIIPCount" use="required" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="ResponseDataType">
                <xs:attribute name="CertificateNumber" type="xs:string"/>
                <xs:attribute name="ErrorNumber" type="xs:string"/>
                <xs:attribute name="FreeformText" type="xs:string"/>
                <xs:attribute name="PassengerGivenName" use="required" type="xs:string"/>
                <xs:attribute name="PassengerSurName" use="required" type="xs:string"/>
                <xs:attribute name="RedemptionCode" use="required" type="xs:string"/>
                <xs:attribute name="SequenceNumber" use="required" type="xs:string"/>
                <xs:attribute name="SeriesID" type="xs:string"/>
                <xs:attribute name="SubTypeCode" use="required" type="xs:string"/>
                <xs:attribute name="TicketDesignator" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="RetrieveECertificateRequestType">
                <xs:sequence>
                    <xs:element name="ECertificateRequest" type="tns:ECertificateRequestType"/>
                    <xs:element ref="ns9:BaseRequestInfo"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveECertificateResponseType">
                <xs:sequence>
                    <xs:element ref="ns34:BaseResponseInfo" minOccurs="0"/>
                    <xs:element name="ECertificateResponse" type="tns:ECertificateResponseType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns5:Error" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveETCVRequestType">
                <xs:sequence>
                    <xs:element ref="ns38:RequestInfo"/>
                    <xs:element ref="ns12:TransportationCreditVoucher" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveETCVResponseType">
                <xs:sequence>
                    <xs:element ref="ns32:DebugInfo" minOccurs="0"/>
                    <xs:element ref="ns12:TransportationCreditVoucher" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns5:Error" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveVouchers2RequestType">
                <xs:sequence>
                    <xs:element ref="ns38:RequestInfo"/>
                    <xs:element ref="ns13:TransportationCreditVoucher" minOccurs="0"/>
                    <xs:element ref="ns49:RequestOption" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>REQOPT , Version 1.4</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveVouchers2ResponseType">
                <xs:sequence>
                    <xs:element ref="ns32:DebugInfo" minOccurs="0"/>
                    <xs:element ref="ns13:TransportationCreditVoucher" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns48:VirtualCreditCardVoucher" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns5:Error" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveVouchersRequestType">
                <xs:sequence>
                    <xs:element ref="ns38:RequestInfo"/>
                    <xs:element ref="ns12:TransportationCreditVoucher" minOccurs="0"/>
                    <xs:element ref="ns49:RequestOption" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>REQOPT , Version 1.4</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RetrieveVouchersResponseType">
                <xs:sequence>
                    <xs:element ref="ns32:DebugInfo" minOccurs="0"/>
                    <xs:element ref="ns12:TransportationCreditVoucher" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns48:VirtualCreditCardVoucher" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="ns5:Error" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SystemFaultType">
                <xs:sequence>
                    <xs:element ref="ns24:FaultDetailedInfo" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="TermsAndConditionsType">
                <xs:sequence>
                    <xs:element name="ECertificateTermConditionText" type="xs:string"/>
                </xs:sequence>
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="TransportationStationsType">
                <xs:attribute name="ECertificatePromotionIdentifier" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionMarketTypeCode" type="xs:string"/>
                <xs:attribute name="ECertificatePromotionStationCode" type="xs:string"/>
                <xs:attribute name="OriginDestinationCode" type="xs:string"/>
            </xs:complexType>
            <xs:element name="AddUnaccompaniedMinorRequest" type="ns43:AddUnaccompaniedMinorRequestType"/>
            <xs:element name="AddUnaccompaniedMinorResponse" type="ns43:AddUnaccompaniedMinorResponseType"/>
            <xs:element name="AutoIssueSpecialServiceTicketRequest" type="ns42:AutoIssueSpecialServiceTicketRequestType"/>
            <xs:element name="AutoIssueSpecialServiceTicketResponse" type="ns42:AutoIssueSpecialServiceTicketResponseType"/>
            <xs:element name="BusinessFault" type="tns:BusinessFaultType"/>
            <xs:element name="CheckHealthRequest" type="ns39:CheckHealthGenericRequestType"/>
            <xs:element name="CheckHealthResponse" type="ns39:CheckHealthResponseType"/>
            <xs:element name="CreateENCIRequest" type="tns:CreateENCIRequestType"/>
            <xs:element name="CreateENCIResponse" type="tns:CreateENCIResponseType"/>
            <xs:element name="CreateETCVRequest" type="tns:CreateETCVRequestType"/>
            <xs:element name="CreateETCVResponse" type="tns:CreateETCVResponseType"/>
            <xs:element name="ECreditSearchRequest" type="ns14:ECreditSearchRequestType"/>
            <xs:element name="ECreditSearchResponse" type="ns40:ECreditSearchResponseType"/>
            <xs:element name="EcertRequest" type="tns:EcertRequestType"/>
            <xs:element name="EcertStatus" type="tns:EcertStatusType"/>
            <xs:element name="EcertUsage" type="tns:EcertUsageType"/>
            <xs:element name="EcertUsageTransaction" type="tns:EcertUsageTransactionType"/>
            <xs:element name="IssueAndPrintDeniedBoardingCompensationRequest" type="ns1:IssueAndPrintDeniedBoardingCompensationRequestType"/>
            <xs:element name="IssueAndPrintDeniedBoardingCompensationResponse" type="ns1:IssueAndPrintDeniedBoardingCompensationResponseType"/>
            <xs:element name="IssueAndPrintGatePassRequest" type="ns1:IssueAndPrintGatePassRequestType"/>
            <xs:element name="IssueAndPrintGatePassResponse" type="ns1:IssueAndPrintGatePassResponseType"/>
            <xs:element name="IssueEmdRequest" type="ns1:IssueEmdRequestType"/>
            <xs:element name="IssueEmdResponse" type="ns1:IssueEmdResponseType"/>
            <xs:element name="IssueLawEnforcementGatePassRequest" type="ns1:IssueLawEnforcementGatePassRequestType"/>
            <xs:element name="IssueLawEnforcementGatePassResponse" type="ns1:IssueLawEnforcementGatePassResponseType"/>
            <xs:element name="IssueSpecialServiceTicketRequest" type="ns1:IssueSpecialServiceTicketRequestType"/>
            <xs:element name="IssueSpecialServiceTicketResponse" type="ns1:IssueSpecialServiceTicketResponseType"/>
            <xs:element name="MaintainDocsRequest" type="ns6:MaintainDocsRequestType"/>
            <xs:element name="MaintainDocsResponse" type="ns6:MaintainDocsResponseType"/>
            <xs:element name="PrintInflightVoucherRequest" type="ns1:PrintInflightVoucherRequestType"/>
            <xs:element name="PrintInflightVoucherResponse" type="ns1:PrintInflightVoucherResponseType"/>
            <xs:element name="RedeemEcertRequest" type="tns:RedeemEcertRequestType"/>
            <xs:element name="RedeemEcertResponse" type="tns:RedeemEcertResponseType"/>
            <xs:element name="RetrieveECertificateRequest" type="tns:RetrieveECertificateRequestType"/>
            <xs:element name="RetrieveECertificateResponse" type="tns:RetrieveECertificateResponseType"/>
            <xs:element name="RetrieveETCVRequest" type="tns:RetrieveETCVRequestType"/>
            <xs:element name="RetrieveETCVResponse" type="tns:RetrieveETCVResponseType"/>
            <xs:element name="RetrieveVouchers2Request" type="tns:RetrieveVouchers2RequestType"/>
            <xs:element name="RetrieveVouchers2Response" type="tns:RetrieveVouchers2ResponseType"/>
            <xs:element name="RetrieveVouchersRequest" type="tns:RetrieveVouchersRequestType"/>
            <xs:element name="RetrieveVouchersResponse" type="tns:RetrieveVouchersResponseType"/>
            <xs:element name="SystemFault" type="tns:SystemFaultType"/>
            <xs:element name="UpdateStatusRequest" type="ns1:UpdateStatusRequestType"/>
            <xs:element name="UpdateStatusResponse" type="ns1:UpdateStatusResponseType"/>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:card="http://schemas.delta.com/common/creditcardinfo/v1" xmlns:y="http://schemas.delta.com/miscellaneousdocrequesttypes/v2" xmlns:fault="http://schemas.delta.com/common/fault/v4" xmlns:ri4="http://schemas.delta.com/common/requestinfo/v4" xmlns:di4="http://schemas.delta.com/common/debuginfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns:err="http://schemas.delta.com/common/error/v4" xmlns:pnrTyp="http://schemas.delta.com/common/pnrcommontypes/v1" xmlns:msd="http://schemas.delta.com/miscellaneousdoctypes/v2" xmlns:prp="http://schemas.delta.com/common/pnrrequestparams" targetNamespace="http://schemas.delta.com/miscellaneousdocrequesttypes/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/fault/v3"/>
            <xsd:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/creditcardinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/pnrrequestparams"/>
            <xsd:import namespace="http://schemas.delta.com/common/pnrcommontypes/v1"/>
            <xsd:import namespace="http://schemas.delta.com/miscellaneousdoctypes/v2"/>
            <xsd:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xsd:complexType name="AutoIssueSpecialServiceTicketRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="pnrTyp:SetupContextRequest" minOccurs="0"/>
                    <xsd:element name="SpecialServiceTicketRequest" type="msd:SpecialServiceTicketRequestType" minOccurs="0"/>
                    <xsd:element ref="prp:PnrRequestParams" minOccurs="0"/>
                    <xsd:element ref="pnrTyp:TeardownContextRequest" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="AutoIssueSpecialServiceTicketResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="SpecialServiceTicketResponse" type="msd:SpecialServiceTicketResponseType" minOccurs="0"/>
                    <xsd:element ref="err:Error" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:card="http://schemas.delta.com/common/creditcardinfo/v1" xmlns:ri4="http://schemas.delta.com/common/requestinfo/v4" xmlns:di4="http://schemas.delta.com/common/debuginfo/v4" xmlns:resp="http://schemas.delta.com/common/responseinfo/v1" xmlns:am="http://schemas.delta.com/common/advisorymessage/v2" xmlns:uam="http://schemas.delta.com/common/unaccompaniedminor/v1" xmlns:err="http://schemas.delta.com/common/error/v4" targetNamespace="http://schemas.delta.com/unaccompaniedmirortypes/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:import namespace="http://schemas.delta.com/common/requestinfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/debuginfo/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/responseinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/creditcardinfo/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/error/v4"/>
            <xsd:import namespace="http://schemas.delta.com/common/unaccompaniedminor/v1"/>
            <xsd:import namespace="http://schemas.delta.com/common/advisorymessage/v2"/>
            <xsd:complexType name="AddUnaccompaniedMinorRequestType">
                <xsd:sequence>
                    <xsd:element ref="ri4:RequestInfo" minOccurs="0"/>
                    <xsd:element ref="uam:UnaccompaniedMinorReq" minOccurs="0"/>
                    <xsd:element ref="card:CreditCardInfo" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="FormOfPaymentType" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="AddUnaccompaniedMinorResponseType">
                <xsd:sequence>
                    <xsd:element ref="di4:DebugInfo" minOccurs="0"/>
                    <xsd:element ref="uam:UnaccompaniedMinorRes" minOccurs="0"/>
                    <xsd:element ref="err:Error" minOccurs="0"/>
                    <xsd:element ref="resp:ResponseInfo" minOccurs="0"/>
                    <xsd:element ref="am:AdvisoryMessage" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/gatepassinfo/v1" targetNamespace="http://schemas.delta.com/common/gatepassinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="GatePassInfoType">
                <xs:attribute name="KnownTraveler" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[25]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PrintOptions" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1]</xs:documentation>
                        <xs:documentation>Option P = Print</xs:documentation>
                        <xs:documentation>Option A = Print and add remarks to related pnr for...</xs:documentation>
                        <xs:documentation>           escort reason only</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Reason" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1]</xs:documentation>
                        <xs:documentation>	E = Escort</xs:documentation>
                        <xs:documentation>	L = Law Enforcement Officer</xs:documentation>
                        <xs:documentation>	M = Military Family </xs:documentation>
                        <xs:documentation> 	G = Government Employee</xs:documentation>
                        <xs:documentation> 	B = Business</xs:documentation>
                        <xs:documentation> 	C = Club Member</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RedressNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>AN[13]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Remarks" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>AN[52]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="GatePassInfo" type="tns:GatePassInfoType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:s="http://schemas.delta.com/common/secureflightpassengerdata/v2" targetNamespace="http://schemas.delta.com/common/secureflightpassengerdata/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="SecureFlightPassengerDataType">
                <xs:attribute name="AuthorizationToRetainSFPD" type="xs:string"/>
                <xs:attribute name="BirthDay" type="xs:string"/>
                <xs:attribute name="BirthMonth" type="xs:string"/>
                <xs:attribute name="BirthYear" type="xs:string"/>
                <xs:attribute name="DocumentExpirationDateDay" type="xs:string"/>
                <xs:attribute name="DocumentExpirationDateMonth" type="xs:string"/>
                <xs:attribute name="DocumentExpirationDateYear" type="xs:string"/>
                <xs:attribute name="DocumentIssuingCountry" type="xs:string"/>
                <xs:attribute name="DocumentIssuingState" type="xs:string"/>
                <xs:attribute name="DocumentNumber" type="xs:string"/>
                <xs:attribute name="DocumentType" type="xs:string"/>
                <xs:attribute name="Gender" type="xs:string"/>
                <xs:attribute name="GivenName" type="xs:string"/>
                <xs:attribute name="IDVerifiedByAgentIndicator" type="xs:string"/>
                <xs:attribute name="MethodOfDataEntry" type="xs:string"/>
                <xs:attribute name="MiddleName" type="xs:string"/>
                <xs:attribute name="OriginBoardCity" type="xs:string"/>
                <xs:attribute name="SourceOfSFPDOnHost" type="xs:string"/>
                <xs:attribute name="SurName" type="xs:string"/>
            </xs:complexType>
            <xs:element name="SecureFlightPassengerData" type="s:SecureFlightPassengerDataType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/passengerinfo" targetNamespace="http://schemas.delta.com/common/passengerinfo" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PassengerInfoType">
                <xs:attribute name="FirstName" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1..?] - Currently using Demand Codes, so it depends on the length of the demand code</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FirstNameNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>#[1..2]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="LastName" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1..?] - Currently using Demand Codes, so it depends on the length of the demand code</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="LastNameNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>#[1..2]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NameRemarks" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[0..?] - Currently using Demand Codes, so it depends on the length of the demand code</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NameSuffix" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[0..?] - Currently using Demand Codes, so it depends on the length of the demand code</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NameTitle" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1..?] - Currently using Demand Codes, so it depends on the length of the demand code</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PassengerTypeCode" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A[1] or A[3]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PnrAddress" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>X[8]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RecordLocator" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>X[6]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RestrictedViewAllowedFlag" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Y/N</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SkyMilesNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>#[10]</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="PassengerInfo" type="y:PassengerInfoType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/passengertypecode" targetNamespace="http://schemas.delta.com/common/passengertypecode" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PassengerTypeCodeType">
                <xs:attribute name="ApplyToAllFlag" type="xs:string"/>
                <xs:attribute name="PassengerTypeCode" type="xs:string"/>
            </xs:complexType>
            <xs:element name="PassengerTypeCode" type="y:PassengerTypeCodeType"/>
        </xs:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/virtualcreditcardvoucher/v1" targetNamespace="http://schemas.delta.com/common/virtualcreditcardvoucher/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <complexType name="VirtualCreditCardVoucherType">
                <annotation>
                    <documentation>
				Information about Transportation Credit Voucher. This complex type corresponds to TCVDTA 
			</documentation>
                </annotation>
                <attribute name="CreditVoucherCode" type="string">
                    <annotation>
                        <documentation>
	                 		3 Digit Security Code
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="CustomerID" type="string">
                    <annotation>
                        <documentation>
		     		Customer ID of  the Customer
		     	</documentation>
                    </annotation>
                </attribute>
                <attribute name="DateOfTravel" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in DDMMMYY format
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultFlightCarrier" type="string">
                    <annotation>
                        <documentation>
	                 		FaultFlightCarrier will always be DL.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FaultFlightNumber" type="string">
                    <annotation>
                        <documentation>
	                 		Flight for which passenger is being compensated.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="FlightStation" type="string">
                    <annotation>
                        <documentation>
	                 		City Code (i.e. ATL)
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="IssuingAgentID" type="string">
                    <annotation>
                        <documentation>
	                 		Agent User ID.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="IssuingAgentStation" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation city code. (i.e. ATL).
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="MCUniqueID" type="string">
                    <annotation>
                        <documentation>
	                 		MasterCard Unique ID
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="ReasonForCompensation" type="string">
                    <annotation>
                        <documentation>
	                 		For general RES agents the following is the
	                 		only valid reason code: FPOC = First Point
	                 		of Contact For RES Customer Cares agents the
	                 		following are valid reason codes: CUST =
	                 		Customer Cares BAG = Baggage HTL N/A = Hotel
	                 		Not Available FPOC ACS = First Point of
	                 		Contact ACS FPOC RES = First Point of
	                 		Contact RES FPOC IFS = First Point of
	                 		Contact In-Flight Services NOTE: the FPOC
	                 		xxx codes allow a Customer Cares agent to
	                 		identify the area where the first point of
	                 		contact occurred with the passenger. The
	                 		following is for information only and is not
	                 		currently in use by the SRS2 service call.
	                 		For ACS agents the following are valid
	                 		reason codes: HTL N/A = Hotel Not Available
	                 		FPOC = First Point of Contact BAG = Baggage
	                 		It is 3 to 8 characters
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="RecipientName" type="string">
                    <annotation>
                        <documentation>
		     		Name of the recipient in the form: LastName/FirstName
		     	</documentation>
                    </annotation>
                </attribute>
                <attribute name="SpendType" type="string">
                    <annotation>
                        <documentation>
	                 		
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAAmount" type="string">
                    <annotation>
                        <documentation>
	                 		Will always be whole amounts (no decimal)
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCACurrency" type="string">
                    <annotation>
                        <documentation>
	                 		
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAExpirationDate" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in MMYY format.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCANumber" type="string">
                    <annotation>
                        <documentation>
	                 		Must be tokenized
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityEndDate" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in DDMMMYY format
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityEndTime" type="string">
                    <annotation>
                        <documentation>
	                 		Must be hh00
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityEndTimeZone" type="string">
                    <annotation>
                        <documentation>
	                 		Civilan Timezone code of the Station
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityStartDate" type="string">
                    <annotation>
                        <documentation>
	                 		Must be in DDMMMYY format.
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityStartTime" type="string">
                    <annotation>
                        <documentation>
	                 		Must be hh00
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="VCAValidityStartTimeZone" type="string">
                    <annotation>
                        <documentation>
	                 		Civilan Timezone code of the Station
	                 	</documentation>
                    </annotation>
                </attribute>
                <attribute name="WorkstationWsine" type="string">
                    <annotation>
                        <documentation>
	                 		Workstation Wsine / CRT Address - present only when printing is requested
	                 	</documentation>
                    </annotation>
                </attribute>
            </complexType>
            <element name="VirtualCreditCardVoucher" type="tns:VirtualCreditCardVoucherType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/requestoption/v1" targetNamespace="http://schemas.delta.com/common/requestoption/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="RequestOptionType">
                <xs:attribute name="RequestOption1" type="xs:string"/>
                <xs:attribute name="RequestOption2" type="xs:string"/>
                <xs:attribute name="RequestOption3" type="xs:string"/>
                <xs:attribute name="RequestOption4" type="xs:string"/>
                <xs:attribute name="RequestOption5" type="xs:string"/>
                <xs:attribute name="RequestOption6" type="xs:string"/>
                <xs:attribute name="RequestOption7" type="xs:string"/>
                <xs:attribute name="RequestOption8" type="xs:string"/>
            </xs:complexType>
            <xs:element name="RequestOption" type="tns:RequestOptionType">
                <xs:annotation>
                    <xs:documentation>REQOPT , Version 1.4</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:schema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/electronicmiscdocument/v1" xmlns:uam="http://schemas.delta.com/common/unaccompaniedminor/v1" targetNamespace="http://schemas.delta.com/electronicmiscdocument/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xsd:complexType name="AccountingDetailsType">
                <xsd:attribute name="Amount" type="xsd:string"/>
                <xsd:attribute name="Description" type="xsd:string"/>
                <xsd:attribute name="ProductSubCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="AccountingInfoType">
                <xsd:attribute name="Amount" type="xsd:string"/>
                <xsd:attribute name="BARTSTransCode" type="xsd:string"/>
                <xsd:attribute name="BARTSTransCodeDescription" type="xsd:string"/>
                <xsd:attribute name="LoyaltyMiles" type="xsd:string"/>
                <xsd:attribute name="Quantity" type="xsd:string"/>
                <xsd:attribute name="ReasonForCompensation" type="xsd:string"/>
                <xsd:attribute name="UnitOfMeasure" type="xsd:string"/>
                <xsd:attribute name="UnitPrice" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="AcertifyInfoType">
                <xsd:attribute name="BillingAddressLine1" type="xsd:string"/>
                <xsd:attribute name="BillingAddressLine2" type="xsd:string"/>
                <xsd:attribute name="BillingCity" type="xsd:string"/>
                <xsd:attribute name="BillingCountry" type="xsd:string"/>
                <xsd:attribute name="BillingEmailAddress" type="xsd:string"/>
                <xsd:attribute name="BillingPhone" type="xsd:string"/>
                <xsd:attribute name="BillingState" type="xsd:string"/>
                <xsd:attribute name="BillingZip" type="xsd:string"/>
                <xsd:attribute name="IPAddress" type="xsd:string"/>
                <xsd:attribute name="MailingAddressLine1" type="xsd:string"/>
                <xsd:attribute name="MailingAddressLine2" type="xsd:string"/>
                <xsd:attribute name="MailingCity" type="xsd:string"/>
                <xsd:attribute name="MailingCountry" type="xsd:string"/>
                <xsd:attribute name="MailingState" type="xsd:string"/>
                <xsd:attribute name="MailingZip" type="xsd:string"/>
                <xsd:attribute name="MessageText" type="xsd:string"/>
                <xsd:attribute name="PassengerTaxID" type="xsd:string"/>
                <xsd:attribute name="ProductEndorsement" type="xsd:string"/>
                <xsd:attribute name="PurchaserName" type="xsd:string"/>
                <xsd:attribute name="RecipientEmailAddress" type="xsd:string"/>
                <xsd:attribute name="RecipientName" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="EmdContentInfoType">
                <xsd:sequence>
                    <xsd:element ref="tns:AccountingInfo" minOccurs="0"/>
                    <xsd:element ref="tns:AccountingDetails" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="EmdDataInfoType">
                <xsd:sequence>
                    <xsd:element ref="tns:EmdInput" minOccurs="0"/>
                    <xsd:element ref="tns:FormOfPayment" minOccurs="0"/>
                    <xsd:element ref="tns:EmdContentInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="tns:FlightSegmentInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="tns:AcertifyInfo" minOccurs="0"/>
                    <xsd:element ref="tns:EnciInput" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="EmdInputType">
                <xsd:attribute name="Association" type="xsd:string"/>
                <xsd:attribute name="BaseDigitsafterDecimal" type="xsd:string"/>
                <xsd:attribute name="EMDBaseCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="EMDBaseValue" type="xsd:string"/>
                <xsd:attribute name="EMDDocType" type="xsd:string"/>
                <xsd:attribute name="EMDTotalCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="EMDTotalValue" type="xsd:string"/>
                <xsd:attribute name="ETKTNumber" type="xsd:string"/>
                <xsd:attribute name="Endorsalble" type="xsd:string"/>
                <xsd:attribute name="EquivalentFarePaidAmount" type="xsd:string"/>
                <xsd:attribute name="Exchangeable" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmount" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmountCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmountDecimalPlaces" type="xsd:string"/>
                <xsd:attribute name="Interlinable" type="xsd:string"/>
                <xsd:attribute name="IssueStatus" type="xsd:string"/>
                <xsd:attribute name="NonCommisionable" type="xsd:string"/>
                <xsd:attribute name="RFIC" type="xsd:string"/>
                <xsd:attribute name="RedemptionCodeNeeded" type="xsd:string"/>
                <xsd:attribute name="Refundable" type="xsd:string"/>
                <xsd:attribute name="SequenceNumber" type="xsd:string"/>
                <xsd:attribute name="TaxAmount1" type="xsd:string"/>
                <xsd:attribute name="TaxAmount2" type="xsd:string"/>
                <xsd:attribute name="TaxAmount3" type="xsd:string"/>
                <xsd:attribute name="TaxCode1" type="xsd:string"/>
                <xsd:attribute name="TaxCode2" type="xsd:string"/>
                <xsd:attribute name="TaxCode3" type="xsd:string"/>
                <xsd:attribute name="TotalDigitsAfterDecimal" type="xsd:string"/>
                <xsd:attribute name="VoluntaryInvoluntary" type="xsd:string"/>
                <xsd:attribute name="WaiverCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="EmdOutputType">
                <xsd:attribute name="CertificateNumber" type="xsd:string"/>
                <xsd:attribute name="ErrorNumber" type="xsd:string"/>
                <xsd:attribute name="FreeformText" type="xsd:string"/>
                <xsd:attribute name="LocalIssueDate" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					This field will contain the issue date of the EMD issuing location in DDMMMYY format.
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="PassengerGivenName" type="xsd:string"/>
                <xsd:attribute name="PassengerGivenNameNumber" type="xsd:string"/>
                <xsd:attribute name="PassengerSurNameNumber" type="xsd:string"/>
                <xsd:attribute name="PassengerSurname" type="xsd:string"/>
                <xsd:attribute name="RedemptionCode" type="xsd:string"/>
                <xsd:attribute name="SequenceNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="EmdRequestInfoType">
                <xsd:sequence>
                    <xsd:element ref="tns:PassengerInfo" minOccurs="0"/>
                    <xsd:element ref="tns:EmdDataInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="EnciInputType">
                <xsd:attribute name="AgencyCorporateIDSkybonusNb" type="xsd:string"/>
                <xsd:attribute name="AgentLoginID" type="xsd:string"/>
                <xsd:attribute name="CertificateCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="CertificateDollarValue" type="xsd:string"/>
                <xsd:attribute name="CertificateType" type="xsd:string"/>
                <xsd:attribute name="ExpirationDate" type="xsd:string"/>
                <xsd:attribute name="FlightBoardPointCity" type="xsd:string"/>
                <xsd:attribute name="FlightCarrierCode" type="xsd:string"/>
                <xsd:attribute name="FlightDepartureDate" type="xsd:string"/>
                <xsd:attribute name="FlightNumber" type="xsd:string"/>
                <xsd:attribute name="FlightOffPointCity" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmount" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmountCurrencyCode" type="xsd:string"/>
                <xsd:attribute name="ForgoneAmountDecimalPlaces" type="xsd:string"/>
                <xsd:attribute name="IssueStatus" type="xsd:string"/>
                <xsd:attribute name="NumberofDecimalPlaces" type="xsd:string"/>
                <xsd:attribute name="PassengerAccountNbSkymileNbr" type="xsd:string"/>
                <xsd:attribute name="PassengerFirstName" type="xsd:string"/>
                <xsd:attribute name="PassengerLastName" type="xsd:string"/>
                <xsd:attribute name="ReasonCodeDescription" type="xsd:string"/>
                <xsd:attribute name="SequenceNumber" type="xsd:string"/>
                <xsd:attribute name="SeriesID" type="xsd:string"/>
                <xsd:attribute name="ServiceRecoveryReasonCode" type="xsd:string"/>
                <xsd:attribute name="SkymilesMemberStatus" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					Member status level, ie. FF, PM, DM. 
					Tier level and SM status may or may not be the same.  For example MM(Million Miler) and CR(Crown Room) are tier levels but they are not SM status.  
					Whereas DM(Diamond Medallion) can be both.
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="SubTypeCode" type="xsd:string"/>
                <xsd:attribute name="TicketDesignatorCode" type="xsd:string"/>
                <xsd:attribute name="TicketNumber" type="xsd:string"/>
                <xsd:attribute name="TicketReasonCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="FlightSegmentInfoType">
                <xsd:attribute name="CabinCompartment" type="xsd:string"/>
                <xsd:attribute name="ClassOfService" type="xsd:string"/>
                <xsd:attribute name="Destination" type="xsd:string"/>
                <xsd:attribute name="ETKTCouponNumber" type="xsd:string"/>
                <xsd:attribute name="ExtendedClassCode" type="xsd:string"/>
                <xsd:attribute name="FlightDate" type="xsd:string"/>
                <xsd:attribute name="MarketingCarrierCode" type="xsd:string"/>
                <xsd:attribute name="MarketingFlightNumber" type="xsd:string"/>
                <xsd:attribute name="OperatingCarrierCode" type="xsd:string"/>
                <xsd:attribute name="OperatingFlightNumber" type="xsd:string"/>
                <xsd:attribute name="Origin" type="xsd:string"/>
                <xsd:attribute name="SegmentNumber" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="FormOfPaymentType">
                <xsd:attribute name="AccountNumber" type="xsd:string"/>
                <xsd:attribute name="AccountingSystemCode" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					AN[1]-Received from the credit card authorization/authentication process.  
					2=magnetic stripe read capability
					9=terminal does not read card data.					
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="AcquirerDataReference" type="xsd:string"/>
                <xsd:attribute name="AddressVerificationResponseInd" type="xsd:string"/>
                <xsd:attribute name="ApprovalCode" type="xsd:string"/>
                <xsd:attribute name="AuthResponseCode" type="xsd:string"/>
                <xsd:attribute name="AuthSourceCode" type="xsd:string"/>
                <xsd:attribute name="AuthorizationInd" type="xsd:string"/>
                <xsd:attribute name="CID" type="xsd:string"/>
                <xsd:attribute name="CardHolderActivationTerminal" type="xsd:string"/>
                <xsd:attribute name="CardHolderAuthVerificationValue" type="xsd:string"/>
                <xsd:attribute name="CardLevelResults" type="xsd:string"/>
                <xsd:attribute name="CreditCardType" type="xsd:string"/>
                <xsd:attribute name="ECommerceInd" type="xsd:string"/>
                <xsd:attribute name="ExchangeCouponDate" type="xsd:string"/>
                <xsd:attribute name="ExchangeCouponNumber" type="xsd:string"/>
                <xsd:attribute name="ExchangeDocumentNumber" type="xsd:string"/>
                <xsd:attribute name="ExchangeDocumentValue" type="xsd:string"/>
                <xsd:attribute name="ExpirationDate" type="xsd:string"/>
                <xsd:attribute name="FormOfPayment" type="xsd:string"/>
                <xsd:attribute name="GlobalCollectInd" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					AN[1]-Y or N. 
					This field only needs to be set when the FOP is a credit card processed through GlobalCollect.  
					Default will be N.  
					Note:  This field does not need to be set when the FOP is MSRBT since MSRBT is a Global Collect FOP.					
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Location" type="xsd:string"/>
                <xsd:attribute name="LoyaltyMemberNumber" type="xsd:string"/>
                <xsd:attribute name="MerchantTypeCode" type="xsd:string"/>
                <xsd:attribute name="NumberOfMiles" type="xsd:string"/>
                <xsd:attribute name="OriginalIssueDate" type="xsd:string"/>
                <xsd:attribute name="POSEntryMode" type="xsd:string"/>
                <xsd:attribute name="PointOfServiceData" type="xsd:string"/>
                <xsd:attribute name="SkymilesMemberStatus" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
					Member status level, ie. FF, PM, DM. 
					Tier level and SM status may or may not be the same.  For example MM(Million Miler) and CR(Crown Room) are tier levels but they are not SM status.  
					Whereas DM(Diamond Medallion) can be both.
				</xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="TransId" type="xsd:string"/>
                <xsd:attribute name="VID" type="xsd:string"/>
                <xsd:attribute name="ValidationCode" type="xsd:string"/>
            </xsd:complexType>
            <xsd:complexType name="PassengerInfoType">
                <xsd:attribute name="AddressLine1" type="xsd:string"/>
                <xsd:attribute name="AddressLine2" type="xsd:string"/>
                <xsd:attribute name="City" type="xsd:string"/>
                <xsd:attribute name="Country" type="xsd:string"/>
                <xsd:attribute name="FirstName" type="xsd:string"/>
                <xsd:attribute name="FirstNameNumber" type="xsd:string"/>
                <xsd:attribute name="FrequentFlyerAirline" type="xsd:string"/>
                <xsd:attribute name="LastName" type="xsd:string"/>
                <xsd:attribute name="LastNameNumber" type="xsd:string"/>
                <xsd:attribute name="LoyaltyMemberNumber" type="xsd:string"/>
                <xsd:attribute name="PhoneNumber" type="xsd:string"/>
                <xsd:attribute name="PostalCode" type="xsd:string"/>
                <xsd:attribute name="RecordLocator" type="xsd:string"/>
                <xsd:attribute name="State" type="xsd:string"/>
                <xsd:attribute name="TierLevel" type="xsd:string"/>
            </xsd:complexType>
            <xsd:element name="AccountingDetails" type="tns:AccountingDetailsType"/>
            <xsd:element name="AccountingInfo" type="tns:AccountingInfoType"/>
            <xsd:element name="AcertifyInfo" type="tns:AcertifyInfoType"/>
            <xsd:element name="EmdContentInfo" type="tns:EmdContentInfoType"/>
            <xsd:element name="EmdDataInfo" type="tns:EmdDataInfoType"/>
            <xsd:element name="EmdInput" type="tns:EmdInputType"/>
            <xsd:element name="EmdOutput" type="tns:EmdOutputType"/>
            <xsd:element name="EmdRequestInfo" type="tns:EmdRequestInfoType"/>
            <xsd:element name="EnciInput" type="tns:EnciInputType"/>
            <xsd:element name="FlightSegmentInfo" type="tns:FlightSegmentInfoType"/>
            <xsd:element name="FormOfPayment" type="tns:FormOfPaymentType"/>
            <xsd:element name="PassengerInfo" type="tns:PassengerInfoType"/>
        </xsd:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/updatestatus/v1" targetNamespace="http://schemas.delta.com/updatestatus/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="UpdateStatusRequestInfoType">
                <xs:attribute name="CouponNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						2 digit coupon number (i.e. 02)
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CurrentCouponStatus" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						Valid statuses are:CLSD,EXCH,OPEN,SUSP,USED
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ElectronicDocumentNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>13 digit EMD document number</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NewCouponStatus" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
						Valid statuses are:CLSD,EXCH,OPEN,SUSP,USED
					</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="SequenceNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>n3 001-099</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="UpdateStatusRequestInfo" type="y:UpdateStatusRequestInfoType"/>
        </xs:schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/pnroptions" targetNamespace="http://schemas.delta.com/common/pnroptions" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PnrOptionsType">
                <xs:attribute name="FreeFormText" type="xs:string"/>
                <xs:attribute name="IgnoreAuditsFlag" type="xs:string"/>
            </xs:complexType>
            <xs:element name="PnrOptions" type="y:PnrOptionsType"/>
        </xs:schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecreditsearchcriteria" xmlns:sky="http://schemas.delta.com/ecredit/ecreditskymilessearch" xmlns:num="http://schemas.delta.com/ecredit/ecreditnumbersearch" xmlns:id="http://schemas.delta.com/ecredit/ecreditidnumbersearch" targetNamespace="http://schemas.delta.com/ecredit/ecreditsearchcriteria" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/ecredit/ecreditskymilessearch"/>
            <import namespace="http://schemas.delta.com/ecredit/ecreditnumbersearch"/>
            <import namespace="http://schemas.delta.com/ecredit/ecreditidnumbersearch"/>
            <complexType name="ECreditSearchCriteriaType">
                <sequence>
                    <element ref="sky:ECreditSkyMilesSearch" minOccurs="0"/>
                    <element ref="num:ECreditNumberSearch" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="id:ECreditIDNumberSearch" minOccurs="0"/>
                </sequence>
                <attribute name="CurrencyCode" type="string"/>
                <attribute name="ECertificateNumber" type="string"/>
                <attribute name="FirstName" type="string"/>
                <attribute name="IataCode" type="string"/>
                <attribute name="IncludePayWithMiles" type="string">
                    <annotation>
                        <documentation>"Y" or "N"</documentation>
                    </annotation>
                </attribute>
                <attribute name="International" type="string">
                    <annotation>
                        <documentation>"Y" or "N"</documentation>
                    </annotation>
                </attribute>
                <attribute name="LastName" type="string"/>
                <attribute name="ResultsType" type="string"/>
                <attribute name="Status" type="string"/>
                <attribute name="Suffix" type="string"/>
            </complexType>
            <element name="ECreditIDNumberSearch" type="id:ECreditIDNumberSearchType"/>
            <element name="ECreditNumberSearch" type="num:ECreditNumberSearchType"/>
            <element name="ECreditSearchCriteria" type="tns:ECreditSearchCriteriaType"/>
            <element name="ECreditSkyMilesSearch" type="sky:ECreditSkyMilesSearchType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/ecredit/ecredit" xmlns:etkt="http://schemas.delta.com/ecredit/eticket" xmlns:err="http://schemas.delta.com/common/error/v4" xmlns:chtxt="http://schemas.delta.com/ecredit/choicetext" targetNamespace="http://schemas.delta.com/ecredit/ecredit" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/ecredit/eticket"/>
            <import namespace="http://schemas.delta.com/ecredit/choicetext"/>
            <import namespace="http://schemas.delta.com/common/error/v4"/>
            <complexType name="ECreditType">
                <sequence>
                    <element ref="etkt:ETicket" minOccurs="0"/>
                    <element ref="chtxt:ChoiceText" minOccurs="0" maxOccurs="unbounded"/>
                    <element ref="err:Error" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="AgencyID" type="string"/>
                <attribute name="AltCurrencyCode" type="string"/>
                <attribute name="AltValue" type="string"/>
                <attribute name="AmountApplied" type="string"/>
                <attribute name="AmountAppliedUSD" type="string"/>
                <attribute name="ApplyToAllPax" type="string"/>
                <attribute name="CorpID" type="string"/>
                <attribute name="CurrencyCode" type="string"/>
                <attribute name="DLRecordLocator" type="string"/>
                <attribute name="DataIDCode" type="string"/>
                <attribute name="DataText" type="string"/>
                <attribute name="DecimalCurrencyInd" type="string">
                    <annotation>
                        <documentation>"D" or "N"</documentation>
                    </annotation>
                </attribute>
                <attribute name="DocDescription" type="string"/>
                <attribute name="DocType" type="string"/>
                <attribute name="EMDText" type="string"/>
                <attribute name="ETRDocumentNumber" type="string"/>
                <attribute name="ExchangedToDocNbr" type="string"/>
                <attribute name="ExchangedToDocType" type="string"/>
                <attribute name="ExpiryDay" type="string"/>
                <attribute name="ExpiryMonth" type="string"/>
                <attribute name="ExpiryYear" type="string"/>
                <attribute name="FirstName" type="string"/>
                <attribute name="HighLevelDocType" type="string"/>
                <attribute name="IssueDay" type="string"/>
                <attribute name="IssueMonth" type="string"/>
                <attribute name="IssueYear" type="string"/>
                <attribute name="LastName" type="string"/>
                <attribute name="OriginalDocMiles" type="string"/>
                <attribute name="OriginalDocNumber" type="string"/>
                <attribute name="OriginalDocValue" type="string"/>
                <attribute name="OtherRecordLocator" type="string"/>
                <attribute name="ReasonCode" type="string"/>
                <attribute name="RedemptionCode" type="string"/>
                <attribute name="Refundable" type="string">
                    <annotation>
                        <documentation>"Y" or "N"</documentation>
                    </annotation>
                </attribute>
                <attribute name="SPID" type="string"/>
                <attribute name="SkyBonusID" type="string"/>
                <attribute name="SkyMilesNumber" type="string"/>
                <attribute name="Source" type="string"/>
                <attribute name="Status" type="string"/>
                <attribute name="SubDocType" type="string"/>
                <attribute name="Suffix" type="string"/>
                <attribute name="TicketDesignator" type="string"/>
                <attribute name="UIDocumentNumber" type="string"/>
                <attribute name="Value" type="string"/>
            </complexType>
            <element name="ECredit" type="tns:ECreditType"/>
        </schema>
        <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.delta.com/common/stamping/v2" xmlns:usr="http://schemas.delta.com/common/userauthdata/v2" xmlns:ptr="http://schemas.delta.com/common/ptrauthdata/v2" targetNamespace="http://schemas.delta.com/common/stamping/v2" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <import namespace="http://schemas.delta.com/common/userauthdata/v2"/>
            <import namespace="http://schemas.delta.com/common/ptrauthdata/v2"/>
            <complexType name="StampingInfoType">
                <sequence>
                    <element ref="usr:UserAuthorizationData" minOccurs="0"/>
                    <element ref="ptr:PrinterAuthorizationData" minOccurs="0"/>
                </sequence>
            </complexType>
            <element name="StampingInfo" type="tns:StampingInfoType"/>
        </schema>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:y="http://schemas.delta.com/common/pointofsaleinfo/v1" targetNamespace="http://schemas.delta.com/common/pointofsaleinfo/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:complexType name="PointOfSaleInfoType">
                <xs:attribute name="AgencyIATANumber" type="xs:string"/>
                <xs:attribute name="AgentId" type="xs:string"/>
                <xs:attribute name="BartsLocation" type="xs:string"/>
                <xs:attribute name="BranchLocation" type="xs:string"/>
                <xs:attribute name="CityCode" type="xs:string"/>
                <xs:attribute name="CorporateID" type="xs:string"/>
                <xs:attribute name="CountryCode" type="xs:string"/>
                <xs:attribute name="DeltaTaxId" type="xs:string"/>
                <xs:attribute name="GDSIdentifier" type="xs:string"/>
                <xs:attribute name="IPAddress" type="xs:string"/>
                <xs:attribute name="PointOfSale" type="xs:string"/>
                <xs:attribute name="RESSkillVDNNumber" type="xs:string"/>
                <xs:attribute name="TransactionID" type="xs:string"/>
                <xs:attribute name="WorkstationCity" type="xs:string"/>
                <xs:attribute name="WorkstationWsine" type="xs:string"/>
            </xs:complexType>
            <xs:element name="PointOfSaleInfo" type="y:PointOfSaleInfoType"/>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="CheckHealthRequest">
        <wsdl:part name="params" element="tns:CheckHealthRequest"/>
    </wsdl:message>
    <wsdl:message name="CheckHealthResponse">
        <wsdl:part name="params" element="tns:CheckHealthResponse"/>
    </wsdl:message>
    <wsdl:message name="RetrieveVouchersRequest">
        <wsdl:part name="params" element="tns:RetrieveVouchersRequest"/>
    </wsdl:message>
    <wsdl:message name="RetrieveVouchersResponse">
        <wsdl:part name="params" element="tns:RetrieveVouchersResponse"/>
    </wsdl:message>
    <wsdl:message name="BusinessFault">
        <wsdl:part name="params" element="tns:BusinessFault"/>
    </wsdl:message>
    <wsdl:message name="SystemFault">
        <wsdl:part name="params" element="tns:SystemFault"/>
    </wsdl:message>
    <wsdl:message name="CreateENCIRequest">
        <wsdl:part name="params" element="tns:CreateENCIRequest"/>
    </wsdl:message>
    <wsdl:message name="CreateENCIResponse">
        <wsdl:part name="params" element="tns:CreateENCIResponse"/>
    </wsdl:message>
    <wsdl:message name="MaintainDocsRequest">
        <wsdl:part name="params" element="tns:MaintainDocsRequest"/>
    </wsdl:message>
    <wsdl:message name="MaintainDocsResponse">
        <wsdl:part name="params" element="tns:MaintainDocsResponse"/>
    </wsdl:message>
    <wsdl:message name="IssueAndPrintGatePassRequest">
        <wsdl:part name="params" element="tns:IssueAndPrintGatePassRequest"/>
    </wsdl:message>
    <wsdl:message name="IssueAndPrintGatePassResponse">
        <wsdl:part name="params" element="tns:IssueAndPrintGatePassResponse"/>
    </wsdl:message>
    <wsdl:message name="RetrieveETCVRequest">
        <wsdl:part name="params" element="tns:RetrieveETCVRequest"/>
    </wsdl:message>
    <wsdl:message name="RetrieveETCVResponse">
        <wsdl:part name="params" element="tns:RetrieveETCVResponse"/>
    </wsdl:message>
    <wsdl:message name="IssueEmdRequest">
        <wsdl:part name="params" element="tns:IssueEmdRequest"/>
    </wsdl:message>
    <wsdl:message name="IssueEmdResponse">
        <wsdl:part name="params" element="tns:IssueEmdResponse"/>
    </wsdl:message>
    <wsdl:message name="RedeemEcertRequest">
        <wsdl:part name="params" element="tns:RedeemEcertRequest"/>
    </wsdl:message>
    <wsdl:message name="RedeemEcertResponse">
        <wsdl:part name="params" element="tns:RedeemEcertResponse"/>
    </wsdl:message>
    <wsdl:message name="IssueSpecialServiceTicketRequest">
        <wsdl:part name="params" element="tns:IssueSpecialServiceTicketRequest"/>
    </wsdl:message>
    <wsdl:message name="IssueSpecialServiceTicketResponse">
        <wsdl:part name="params" element="tns:IssueSpecialServiceTicketResponse"/>
    </wsdl:message>
    <wsdl:message name="CreateETCVRequest">
        <wsdl:part name="params" element="tns:CreateETCVRequest"/>
    </wsdl:message>
    <wsdl:message name="CreateETCVResponse">
        <wsdl:part name="params" element="tns:CreateETCVResponse"/>
    </wsdl:message>
    <wsdl:message name="AddUnaccompaniedMinorRequest">
        <wsdl:part name="params" element="tns:AddUnaccompaniedMinorRequest"/>
    </wsdl:message>
    <wsdl:message name="AddUnaccompaniedMinorResponse">
        <wsdl:part name="params" element="tns:AddUnaccompaniedMinorResponse"/>
    </wsdl:message>
    <wsdl:message name="RetrieveVouchers2Request">
        <wsdl:part name="params" element="tns:RetrieveVouchers2Request"/>
    </wsdl:message>
    <wsdl:message name="RetrieveVouchers2Response">
        <wsdl:part name="params" element="tns:RetrieveVouchers2Response"/>
    </wsdl:message>
    <wsdl:message name="RetrieveECreditRequest">
        <wsdl:part name="params" element="tns:ECreditSearchRequest"/>
    </wsdl:message>
    <wsdl:message name="RetrieveECreditResponse">
        <wsdl:part name="params" element="tns:ECreditSearchResponse"/>
    </wsdl:message>
    <wsdl:message name="IssueLawEnforcementGatePassRequest">
        <wsdl:part name="params" element="tns:IssueLawEnforcementGatePassRequest"/>
    </wsdl:message>
    <wsdl:message name="IssueLawEnforcementGatePassResponse">
        <wsdl:part name="params" element="tns:IssueLawEnforcementGatePassResponse"/>
    </wsdl:message>
    <wsdl:message name="UpdateStatusRequest">
        <wsdl:part name="params" element="tns:UpdateStatusRequest"/>
    </wsdl:message>
    <wsdl:message name="UpdateStatusResponse">
        <wsdl:part name="params" element="tns:UpdateStatusResponse"/>
    </wsdl:message>
    <wsdl:message name="PrintInflightVoucherRequest">
        <wsdl:part name="params" element="tns:PrintInflightVoucherRequest"/>
    </wsdl:message>
    <wsdl:message name="PrintInflightVoucherResponse">
        <wsdl:part name="params" element="tns:PrintInflightVoucherResponse"/>
    </wsdl:message>
    <wsdl:message name="AutoIssueSpecialServiceTicketRequest">
        <wsdl:part name="params" element="tns:AutoIssueSpecialServiceTicketRequest"/>
    </wsdl:message>
    <wsdl:message name="AutoIssueSpecialServiceTicketResponse">
        <wsdl:part name="params" element="tns:AutoIssueSpecialServiceTicketResponse"/>
    </wsdl:message>
    <wsdl:message name="RetrieveECertificateRequest">
        <wsdl:part name="params" element="tns:RetrieveECertificateRequest"/>
    </wsdl:message>
    <wsdl:message name="RetrieveECertificateResponse">
        <wsdl:part name="params" element="tns:RetrieveECertificateResponse"/>
    </wsdl:message>
    <wsdl:message name="IssueAndPrintDeniedBoardingCompensationRequest">
        <wsdl:part name="params" element="tns:IssueAndPrintDeniedBoardingCompensationRequest"/>
    </wsdl:message>
    <wsdl:message name="IssueAndPrintDeniedBoardingCompensationResponse">
        <wsdl:part name="params" element="tns:IssueAndPrintDeniedBoardingCompensationResponse"/>
    </wsdl:message>
    <wsdl:portType name="MiscellaneousDocument">
        <wsdl:operation name="CheckHealth">
            <wsdl:input message="tns:CheckHealthRequest"/>
            <wsdl:output message="tns:CheckHealthResponse"/>
        </wsdl:operation>
        <wsdl:operation name="RetrieveVouchers">
            <wsdl:input message="tns:RetrieveVouchersRequest"/>
            <wsdl:output message="tns:RetrieveVouchersResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="CreateENCI">
            <wsdl:input message="tns:CreateENCIRequest"/>
            <wsdl:output message="tns:CreateENCIResponse"/>
        </wsdl:operation>
        <wsdl:operation name="MaintainDocs">
            <wsdl:input message="tns:MaintainDocsRequest"/>
            <wsdl:output message="tns:MaintainDocsResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="IssueAndPrintGatePass">
            <wsdl:input message="tns:IssueAndPrintGatePassRequest"/>
            <wsdl:output message="tns:IssueAndPrintGatePassResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="RetrieveETCV">
            <wsdl:input message="tns:RetrieveETCVRequest"/>
            <wsdl:output message="tns:RetrieveETCVResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="IssueEmd">
            <wsdl:input message="tns:IssueEmdRequest"/>
            <wsdl:output message="tns:IssueEmdResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="RedeemEcert">
            <wsdl:input message="tns:RedeemEcertRequest"/>
            <wsdl:output message="tns:RedeemEcertResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="IssueSpecialServiceTicket">
            <wsdl:input message="tns:IssueSpecialServiceTicketRequest"/>
            <wsdl:output message="tns:IssueSpecialServiceTicketResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="CreateETCV">
            <wsdl:input message="tns:CreateETCVRequest"/>
            <wsdl:output message="tns:CreateETCVResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="AddUnaccompaniedMinor">
            <wsdl:input message="tns:AddUnaccompaniedMinorRequest"/>
            <wsdl:output message="tns:AddUnaccompaniedMinorResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="RetrieveVouchers2">
            <wsdl:input message="tns:RetrieveVouchers2Request"/>
            <wsdl:output message="tns:RetrieveVouchers2Response"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="RetrieveECredits">
            <wsdl:input message="tns:RetrieveECreditRequest"/>
            <wsdl:output message="tns:RetrieveECreditResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="IssueLawEnforcementGatePass">
            <wsdl:input message="tns:IssueLawEnforcementGatePassRequest"/>
            <wsdl:output message="tns:IssueLawEnforcementGatePassResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="UpdateStatus">
            <wsdl:input message="tns:UpdateStatusRequest"/>
            <wsdl:output message="tns:UpdateStatusResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="PrintInflightVoucher">
            <wsdl:input message="tns:PrintInflightVoucherRequest"/>
            <wsdl:output message="tns:PrintInflightVoucherResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="AutoIssueSpecialServiceTicket">
            <wsdl:input message="tns:AutoIssueSpecialServiceTicketRequest"/>
            <wsdl:output message="tns:AutoIssueSpecialServiceTicketResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
        <wsdl:operation name="RetrieveECertificate">
            <wsdl:input message="tns:RetrieveECertificateRequest"/>
            <wsdl:output message="tns:RetrieveECertificateResponse"/>
        </wsdl:operation>
        <wsdl:operation name="IssueAndPrintDeniedBoardingCompensation">
            <wsdl:input message="tns:IssueAndPrintDeniedBoardingCompensationRequest"/>
            <wsdl:output message="tns:IssueAndPrintDeniedBoardingCompensationResponse"/>
            <wsdl:fault name="businessFault" message="tns:BusinessFault"/>
            <wsdl:fault name="systemFault" message="tns:SystemFault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="MiscellaneousDocument_EP" type="tns:MiscellaneousDocument">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="CheckHealth">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="CheckHealth"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="RetrieveVouchers">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RetrieveVouchers"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="CreateENCI">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="CreateENCI"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="MaintainDocs">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="MaintainDocs"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="IssueAndPrintGatePass">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="IssueAndPrintGatePass"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="RetrieveETCV">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RetrieveETCV"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="IssueEmd">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="IssueEmd"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="RedeemEcert">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RedeemEcert"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="IssueSpecialServiceTicket">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="IssueSpecialServiceTicket"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="CreateETCV">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="CreateETCV"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="AddUnaccompaniedMinor">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="AddUnaccompaniedMinor"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="RetrieveVouchers2">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RetrieveVouchers2"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="RetrieveECredits">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RetrieveECredits"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="IssueLawEnforcementGatePass">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="IssueLawEnforcementGatePass"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="UpdateStatus">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="UpdateStatus"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="PrintInflightVoucher">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="PrintInflightVoucher"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="AutoIssueSpecialServiceTicket">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="AutoIssueSpecialServiceTicket"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="RetrieveECertificate">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="RetrieveECertificate"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="IssueAndPrintDeniedBoardingCompensation">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="IssueAndPrintDeniedBoardingCompensation"/>
            <wsdl:input>
                <soap:body use="literal" parts="params"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="params"/>
            </wsdl:output>
            <wsdl:fault name="businessFault">
                <soap:fault use="literal" name="businessFault"/>
            </wsdl:fault>
            <wsdl:fault name="systemFault">
                <soap:fault use="literal" name="systemFault"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="MiscellaneousDocument">
        <wsdl:port name="MiscellaneousDocument_EP" binding="tns:MiscellaneousDocument_EP">
            <soap:address location="http://localhost:37518/miscellaneousdocument/v2"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>