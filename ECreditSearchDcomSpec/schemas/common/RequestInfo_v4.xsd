<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Delta Air Lines, Inc. (Delta Air Lines, Inc.) -->
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by Lissy Mathew (Delta Technology) -->
<!--W3C Schema generated by XMLSPY v2004 rel. 2 U (http://www.xmlspy.com)-->
<schema targetNamespace="http://schemas.delta.com/common/requestinfo/v4" xmlns:tns="http://schemas.delta.com/common/requestinfo/v4" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<element name="RequestInfo" type="tns:RequestInfoType"/>
	<complexType name="HostContextParamsType">
		<attribute name="PoolType" type="string">
			<annotation>
				<documentation> 
					Indicates PoolName or a client's logged-in wsine
					for which session is being 
					requested. If a client's logged-in wsine is being
					used, info in the format,  ;wsine=xxxxxx  should
					be passed in for all operations that create or destroy a session.
					If a client's logged-in wsine is being used AND this wsine needs
					to be logged off during destroy, info in the format,  ;wsine=xxxxxx;logoff=Y/N  should
					be passed in for all operations that create or destroy a session.
					xxxxx is the wsine and logoff=Y would imply that 
					during destroy the client's wsine will be logged off.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="TimeoutSession" type="string">
			<annotation>
				<documentation>
					Specify the timeout in seconds for the requested
					session. This should be based on the type of
					transaction the session is about to handle. The
					session will be terminated when this is reached even
					if there is activity against the session. This
					should be an int with a range from 0000 - 9999.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="TimeoutInactivity" type="string">
			<annotation>
				<documentation>
					Specify the timeout in seconds for the requested
					session if the session is inactive for the duration
					specified. This should be based on the type of
					transaction the session is about to handle.
					Inactivity timeout should be less than the
					TimeoutSession. This should be an int with a range
					from 0000 - 9998.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="LogonId" type="string">
			<annotation>
				<documentation>
					If the session is to be created using an
					individual's logon, this specifies the LogonId to be
					utilized for this session. This can have various
					implications including what commands can be
					executed, etc.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="Password" type="string">
			<annotation>
				<documentation>
					Password for the LogonId provided (if any)
				</documentation>
			</annotation>
		</attribute>
		<attribute name="Airline" type="string">
			<annotation>
				<documentation>
					Airline Code

				</documentation>
			</annotation>
		</attribute>
		<attribute name="City" type="string">
			<annotation>
				<documentation>
					Specifies the City Code that is to be used; this has
					implications as to which commands can be executed on
					specific records.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="DutyCode" type="string"/>
		<attribute name="ResetPassword" type="string">
			<annotation>
				<documentation>
					ResetPassword is required if the password is to be
					changed with this request. If this is present,
					password for the LogonId should be changed to the
					password requested. Don't ask why it is even here!
				</documentation>
			</annotation>
		</attribute>
		<!-- Max 32 chars ... allowed alphas and "/" -->
		<!-- 4 digit number ... max  9999  has to be greater than TimeoutSession-->
		<!-- alpha numeric... -->
		<!-- If logon is provided, password must be provided 5-8 chars -->
		<!--  -->
		<!-- 3 alpha numeric... -->
		<!-- 2 alpha... -->
	</complexType>
	<element name="HostContextParams" type="tns:HostContextParamsType"/>
	<complexType name="RequestInfoType">
		<sequence>
			<element ref="tns:HostContextParams" minOccurs="0"/>
			<element ref="tns:DBConnectionInfo" minOccurs="0"/>
		</sequence>
		<attribute name="ApplicationId" type="string">
			<annotation>
				<documentation>
					Each client should have a unique identifier. This is
					defined by Worldspan.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="ApplicationVersion" type="string">
			<annotation>
				<documentation>
					Logged for debugging and possibly used for routing.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="Company" type="string">
			<annotation>
				<documentation>
					Logged for debugging and possibly used for routing.
					For DT, it would all be Delta.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="SessionId" type="string">
			<annotation>
				<documentation>
					The session cookie that was provided by the
					Session.Create service.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="TransactionId" type="string">
			<annotation>
				<documentation>
					The unique transaction id for this session. This
					must be created and provided by the client and is
					used in instrumentation logging and reporting.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="Description" type="string">
			<annotation>
				<documentation>
					The description of the transaction or session. This
					is also provided by the client and is used in
					instrumentation logging and reporting.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="DebugOptions" type="string">
			<annotation>
				<documentation>
					If not empty, debug information will be included in
					the response. The debug information will include,
					among other things, the actual request/response
					sent/received from the data sources used in the
					service and the current configuration settings.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="TurnOffResponseInfo" type="string">
			<annotation>
				<documentation>By default, all operation responses may return ResponseInfo elements. Set this to "Y" to not get back any ResponseInfo elements in the response.		</documentation>
			</annotation>
		</attribute>
		<attribute name="TestLab" type="string">
			<annotation>
				<documentation>
					Use this parameter if the request need to be routed
					to a particular test lab (TSAJ..TSAT..ETC). This
					should be used only for debugging puposes while the
					default lab is not available. This parameter should
					never be used in Production Environment.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="Location" type="string">
			<annotation>
				<documentation>
					Logged for debugging and possibly used for routing.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="ExternalVendorFlag" type="string">
			<annotation>
				<documentation>
					Default is N. This flag needs to be set to 'Y' if
					the request is for external Vendor.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="AppChannelName" type="string">
			<annotation>
				<documentation>
					The name of the channel from which the request is
					originating, e.g. kiosk, delta.com, etc.
				</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="DBConnectionInfoType">
		<annotation>
			<documentation/>
		</annotation>
		<attribute name="TestBedsDBId" type="string">
			<annotation>
				<documentation>
    				A predefined BookingEDS (BEDS) database instance id
    			</documentation>
			</annotation>
		</attribute>
		<attribute name="TestFpesDBId" type="string">
			<annotation>
				<documentation>
    				A predefined FPES database instance id
    			</documentation>
			</annotation>
		</attribute>
		<attribute name="BedsDBDnsNameId" type="string">
			<annotation>
				<documentation>
    				An id to match the client with a particular dns for
    				BEDS
    			</documentation>
			</annotation>
		</attribute>
	</complexType>
	<element name="DBConnectionInfo" type="tns:DBConnectionInfoType"/>
</schema>
